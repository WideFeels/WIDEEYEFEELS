/* Generated by the Nim Compiler v2.0.0 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI520093799 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1157627908 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1157627907 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555183 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405123 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI520093988 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1107296263 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1107296264 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1107296262 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1107296261 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1107296260 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI654311427 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520093704 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI654311953 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI671088660 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI671088660 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI671088660.node = NNI671088660;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI671088660.base = NTI33555178;
var NNI33555835 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555835.node = NNI33555835;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
var NNI654311953 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554450, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI654311953.node = NNI654311953;
var NNI520093704 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554466, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554450, name: "Field1", sons: null}]};
NTI520093704.node = NNI520093704;
var NNI654311427 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI654311427.node = NNI654311427;
NTI654311427.base = NTI33555177;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
var NNI1107296260 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1107296260, name: "cors", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1107296260, name: "no-cors", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1107296260, name: "same-origin", len: 0, sons: null}}};
NTI1107296260.node = NNI1107296260;
var NNI1107296261 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1107296261, name: "include", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1107296261, name: "same-origin", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1107296261, name: "omit", len: 0, sons: null}}};
NTI1107296261.node = NNI1107296261;
var NNI1107296262 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI1107296262, name: "default", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1107296262, name: "no-store", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1107296262, name: "reload", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1107296262, name: "no-cache", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1107296262, name: "force-cache", len: 0, sons: null}}};
NTI1107296262.node = NNI1107296262;
var NNI1107296264 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI1107296264, name: "no-referrer", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1107296264, name: "no-referrer-when-downgrade", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1107296264, name: "origin", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1107296264, name: "origin-when-cross-origin", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1107296264, name: "unsafe-url", len: 0, sons: null}}};
NTI1107296264.node = NNI1107296264;
var NNI1107296263 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1107296263, name: "follow", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1107296263, name: "error", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1107296263, name: "manual", len: 0, sons: null}}};
NTI1107296263.node = NNI1107296263;
var NNI1174405124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1174405124.node = NNI1174405124;
var NNI33555183 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555183.node = NNI33555183;
NTI33555183.base = NTI33555173;
NTI1174405124.base = NTI33555183;
NTI1174405123.base = NTI1174405124;
var NNI1157627908 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1157627908.node = NNI1157627908;
NTI1157627908.base = NTI33555183;
NTI1157627907.base = NTI1157627908;
var NNI520093988 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "keepalive", len: 0, typ: NTI33554466, name: "keepalive", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI33554450, name: "metod", sons: null}, 
{kind: 1, offset: "integrity", len: 0, typ: NTI33554450, name: "integrity", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI33554450, name: "referrer", sons: null}, 
{kind: 1, offset: "mode", len: 0, typ: NTI33554450, name: "mode", sons: null}, 
{kind: 1, offset: "credentials", len: 0, typ: NTI33554450, name: "credentials", sons: null}, 
{kind: 1, offset: "cache", len: 0, typ: NTI33554450, name: "cache", sons: null}, 
{kind: 1, offset: "redirect", len: 0, typ: NTI33554450, name: "redirect", sons: null}, 
{kind: 1, offset: "referrerPolicy", len: 0, typ: NTI33554450, name: "referrerPolicy", sons: null}, 
{kind: 1, offset: "headers", len: 0, typ: NTI1174405123, name: "headers", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1157627907, name: "body", sons: null}]};
NTI520093988.node = NNI520093988;
NTI520093988.base = NTI33555183;
NTI520093799.base = NTI33554435;

function arrayConstr(len_33557314, value_33557315, typ_33557316) {
        var result = new Array(len_33557314);
    for (var i = 0; i < len_33557314; ++i) result[i] = nimCopy(null, value_33557315, typ_33557316);
    return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function mnewString(len_33557003) {
        return new Array(len_33557003);
  

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    e_33556653.trace = nimCopy(null, rawWriteStackTrace_33556604(), NTI33554449);
    throw e_33556653;

  
}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet2 = setConstr(0, 1);

function reprEnum(e_33557576, typ_33557577) {
  var result_33557578 = [];

  var F = {procname: "system.reprEnum", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system/reprjs.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "reprjs.nim";
    var tmp_33557579 = false;
    F.line = 31;
    var item_33557580 = typ_33557577.node.sons[e_33557576];
    F.line = 32;
    tmp_33557579 = item_33557580 !== undefined
    if (tmp_33557579) {
    F.line = 34;
    result_33557578 = nimCopy(null, makeNimstrLit(item_33557580.name), NTI33554449);
    }
    else {
      F.line = 36;
      result_33557578 = nimCopy(null, (HEX24_369098760(e_33557576) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_33557578;

}
var F = {procname: "module macros", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module dom", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/dom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module dom", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/dom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/hashes.nim", line: 0};
framePtr = F;
F.line = 218;
F.filename = "hashes.nim";
var objectID_1040187569 = [0];
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module httpcore", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/httpcore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module httpcore", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/httpcore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/jsffi.nim", line: 0};
framePtr = F;
F.line = 45;
F.filename = "jsffi.nim";
F.line = 46;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module asyncjs", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/asyncjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module asyncjs", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/asyncjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsformdata", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/jsformdata.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsformdata", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/jsformdata.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsheaders", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/jsheaders.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsheaders", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/jsheaders.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsfetch", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/jsfetch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsfetch", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/jsfetch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsconsole", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/jsconsole.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsconsole", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/jsconsole.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jswebsockets", prev: framePtr, filename: "/root/.nimble/pkgs2/nodejs-18.12.0-8438d7d686f8bece0979923830323b85aea32237/nodejs/jswebsockets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jswebsockets", prev: framePtr, filename: "/root/.nimble/pkgs2/nodejs-18.12.0-8438d7d686f8bece0979923830323b85aea32237/nodejs/jswebsockets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimjs", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimjs", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module icecream", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/icecream.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module icecream", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/icecream.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimEthers", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimEthers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimEthers", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimEthers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimThirdweb", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimThirdweb.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimThirdweb", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimThirdweb.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module consts", prev: framePtr, filename: "/root/wef/consts.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module consts", prev: framePtr, filename: "/root/wef/consts.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumerate", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/enumerate.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumerate", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/enumerate.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objvar", prev: framePtr, filename: "/root/.nimble/pkgs2/jsony-1.1.5-6aeb83e7481ca8686396a568096054bc668294df/jsony/objvar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objvar", prev: framePtr, filename: "/root/.nimble/pkgs2/jsony-1.1.5-6aeb83e7481ca8686396a568096054bc668294df/jsony/objvar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module decode_helpers", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/decode_helpers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module decode_helpers", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/decode_helpers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsony", prev: framePtr, filename: "/root/.nimble/pkgs2/jsony-1.1.5-6aeb83e7481ca8686396a568096054bc668294df/jsony.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsony", prev: framePtr, filename: "/root/.nimble/pkgs2/jsony-1.1.5-6aeb83e7481ca8686396a568096054bc668294df/jsony.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module abi_file", prev: framePtr, filename: "/root/wef/abi_file.nim", line: 0};
framePtr = F;
F.line = 2;
F.filename = "abi_file.nim";
var abi = {};
F.line = 3;
abi = 
[
  {
    "type": "constructor",
    "name": "",
    "inputs": [],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "error",
    "name": "OperatorNotAllowed",
    "inputs": [
      {
        "type": "address",
        "name": "operator",
        "internalType": "address"
      }
    ],
    "outputs": []
  },
  {
    "type": "event",
    "name": "ApprovalForAll",
    "inputs": [
      {
        "type": "address",
        "name": "account",
        "indexed": true,
        "internalType": "address"
      },
      {
        "type": "address",
        "name": "operator",
        "indexed": true,
        "internalType": "address"
      },
      {
        "type": "bool",
        "name": "approved",
        "indexed": false,
        "internalType": "bool"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "ClaimConditionsUpdated",
    "inputs": [
      {
        "type": "uint256",
        "name": "tokenId",
        "indexed": true,
        "internalType": "uint256"
      },
      {
        "type": "tuple[]",
        "name": "claimConditions",
        "components": [
          {
            "type": "uint256",
            "name": "startTimestamp",
            "internalType": "uint256"
          },
          {
            "type": "uint256",
            "name": "maxClaimableSupply",
            "internalType": "uint256"
          },
          {
            "type": "uint256",
            "name": "supplyClaimed",
            "internalType": "uint256"
          },
          {
            "type": "uint256",
            "name": "quantityLimitPerWallet",
            "internalType": "uint256"
          },
          {
            "type": "bytes32",
            "name": "merkleRoot",
            "internalType": "bytes32"
          },
          {
            "type": "uint256",
            "name": "pricePerToken",
            "internalType": "uint256"
          },
          {
            "type": "address",
            "name": "currency",
            "internalType": "address"
          },
          {
            "type": "string",
            "name": "metadata",
            "internalType": "string"
          }
        ],
        "indexed": false,
        "internalType": "struct IClaimCondition.ClaimCondition[]"
      },
      {
        "type": "bool",
        "name": "resetEligibility",
        "indexed": false,
        "internalType": "bool"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "ContractURIUpdated",
    "inputs": [
      {
        "type": "string",
        "name": "prevURI",
        "indexed": false,
        "internalType": "string"
      },
      {
        "type": "string",
        "name": "newURI",
        "indexed": false,
        "internalType": "string"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "DefaultRoyalty",
    "inputs": [
      {
        "type": "address",
        "name": "newRoyaltyRecipient",
        "indexed": true,
        "internalType": "address"
      },
      {
        "type": "uint256",
        "name": "newRoyaltyBps",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "Initialized",
    "inputs": [
      {
        "type": "uint8",
        "name": "version",
        "indexed": false,
        "internalType": "uint8"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "MaxTotalSupplyUpdated",
    "inputs": [
      {
        "type": "uint256",
        "name": "tokenId",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "type": "uint256",
        "name": "maxTotalSupply",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "OperatorRestriction",
    "inputs": [
      {
        "type": "bool",
        "name": "restriction",
        "indexed": false,
        "internalType": "bool"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "OwnerUpdated",
    "inputs": [
      {
        "type": "address",
        "name": "prevOwner",
        "indexed": true,
        "internalType": "address"
      },
      {
        "type": "address",
        "name": "newOwner",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "PlatformFeeInfoUpdated",
    "inputs": [
      {
        "type": "address",
        "name": "platformFeeRecipient",
        "indexed": true,
        "internalType": "address"
      },
      {
        "type": "uint256",
        "name": "platformFeeBps",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "PrimarySaleRecipientUpdated",
    "inputs": [
      {
        "type": "address",
        "name": "recipient",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "RoleAdminChanged",
    "inputs": [
      {
        "type": "bytes32",
        "name": "role",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "type": "bytes32",
        "name": "previousAdminRole",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "type": "bytes32",
        "name": "newAdminRole",
        "indexed": true,
        "internalType": "bytes32"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "RoleGranted",
    "inputs": [
      {
        "type": "bytes32",
        "name": "role",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "type": "address",
        "name": "account",
        "indexed": true,
        "internalType": "address"
      },
      {
        "type": "address",
        "name": "sender",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "RoleRevoked",
    "inputs": [
      {
        "type": "bytes32",
        "name": "role",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "type": "address",
        "name": "account",
        "indexed": true,
        "internalType": "address"
      },
      {
        "type": "address",
        "name": "sender",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "RoyaltyForToken",
    "inputs": [
      {
        "type": "uint256",
        "name": "tokenId",
        "indexed": true,
        "internalType": "uint256"
      },
      {
        "type": "address",
        "name": "royaltyRecipient",
        "indexed": true,
        "internalType": "address"
      },
      {
        "type": "uint256",
        "name": "royaltyBps",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "SaleRecipientForTokenUpdated",
    "inputs": [
      {
        "type": "uint256",
        "name": "tokenId",
        "indexed": true,
        "internalType": "uint256"
      },
      {
        "type": "address",
        "name": "saleRecipient",
        "indexed": false,
        "internalType": "address"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "TokensClaimed",
    "inputs": [
      {
        "type": "uint256",
        "name": "claimConditionIndex",
        "indexed": true,
        "internalType": "uint256"
      },
      {
        "type": "address",
        "name": "claimer",
        "indexed": true,
        "internalType": "address"
      },
      {
        "type": "address",
        "name": "receiver",
        "indexed": true,
        "internalType": "address"
      },
      {
        "type": "uint256",
        "name": "tokenId",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "type": "uint256",
        "name": "quantityClaimed",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "TokensLazyMinted",
    "inputs": [
      {
        "type": "uint256",
        "name": "startTokenId",
        "indexed": true,
        "internalType": "uint256"
      },
      {
        "type": "uint256",
        "name": "endTokenId",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "type": "string",
        "name": "baseURI",
        "indexed": false,
        "internalType": "string"
      },
      {
        "type": "bytes",
        "name": "encryptedBaseURI",
        "indexed": false,
        "internalType": "bytes"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "TransferBatch",
    "inputs": [
      {
        "type": "address",
        "name": "operator",
        "indexed": true,
        "internalType": "address"
      },
      {
        "type": "address",
        "name": "from",
        "indexed": true,
        "internalType": "address"
      },
      {
        "type": "address",
        "name": "to",
        "indexed": true,
        "internalType": "address"
      },
      {
        "type": "uint256[]",
        "name": "ids",
        "indexed": false,
        "internalType": "uint256[]"
      },
      {
        "type": "uint256[]",
        "name": "values",
        "indexed": false,
        "internalType": "uint256[]"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "TransferSingle",
    "inputs": [
      {
        "type": "address",
        "name": "operator",
        "indexed": true,
        "internalType": "address"
      },
      {
        "type": "address",
        "name": "from",
        "indexed": true,
        "internalType": "address"
      },
      {
        "type": "address",
        "name": "to",
        "indexed": true,
        "internalType": "address"
      },
      {
        "type": "uint256",
        "name": "id",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "type": "uint256",
        "name": "value",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "URI",
    "inputs": [
      {
        "type": "string",
        "name": "value",
        "indexed": false,
        "internalType": "string"
      },
      {
        "type": "uint256",
        "name": "id",
        "indexed": true,
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "anonymous": false
  },
  {
    "type": "function",
    "name": "DEFAULT_ADMIN_ROLE",
    "inputs": [],
    "outputs": [
      {
        "type": "bytes32",
        "name": "",
        "internalType": "bytes32"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "balanceOf",
    "inputs": [
      {
        "type": "address",
        "name": "account",
        "internalType": "address"
      },
      {
        "type": "uint256",
        "name": "id",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "type": "uint256",
        "name": "",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "balanceOfBatch",
    "inputs": [
      {
        "type": "address[]",
        "name": "accounts",
        "internalType": "address[]"
      },
      {
        "type": "uint256[]",
        "name": "ids",
        "internalType": "uint256[]"
      }
    ],
    "outputs": [
      {
        "type": "uint256[]",
        "name": "",
        "internalType": "uint256[]"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "burnBatch",
    "inputs": [
      {
        "type": "address",
        "name": "account",
        "internalType": "address"
      },
      {
        "type": "uint256[]",
        "name": "ids",
        "internalType": "uint256[]"
      },
      {
        "type": "uint256[]",
        "name": "values",
        "internalType": "uint256[]"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "claim",
    "inputs": [
      {
        "type": "address",
        "name": "_receiver",
        "internalType": "address"
      },
      {
        "type": "uint256",
        "name": "_tokenId",
        "internalType": "uint256"
      },
      {
        "type": "uint256",
        "name": "_quantity",
        "internalType": "uint256"
      },
      {
        "type": "address",
        "name": "_currency",
        "internalType": "address"
      },
      {
        "type": "uint256",
        "name": "_pricePerToken",
        "internalType": "uint256"
      },
      {
        "type": "tuple",
        "name": "_allowlistProof",
        "components": [
          {
            "type": "bytes32[]",
            "name": "proof",
            "internalType": "bytes32[]"
          },
          {
            "type": "uint256",
            "name": "quantityLimitPerWallet",
            "internalType": "uint256"
          },
          {
            "type": "uint256",
            "name": "pricePerToken",
            "internalType": "uint256"
          },
          {
            "type": "address",
            "name": "currency",
            "internalType": "address"
          }
        ],
        "internalType": "struct IDrop1155.AllowlistProof"
      },
      {
        "type": "bytes",
        "name": "_data",
        "internalType": "bytes"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "function",
    "name": "claimCondition",
    "inputs": [
      {
        "type": "uint256",
        "name": "",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "type": "uint256",
        "name": "currentStartId",
        "internalType": "uint256"
      },
      {
        "type": "uint256",
        "name": "count",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "contractType",
    "inputs": [],
    "outputs": [
      {
        "type": "bytes32",
        "name": "",
        "internalType": "bytes32"
      }
    ],
    "stateMutability": "pure"
  },
  {
    "type": "function",
    "name": "contractURI",
    "inputs": [],
    "outputs": [
      {
        "type": "string",
        "name": "",
        "internalType": "string"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "contractVersion",
    "inputs": [],
    "outputs": [
      {
        "type": "uint8",
        "name": "",
        "internalType": "uint8"
      }
    ],
    "stateMutability": "pure"
  },
  {
    "type": "function",
    "name": "getActiveClaimConditionId",
    "inputs": [
      {
        "type": "uint256",
        "name": "_tokenId",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "type": "uint256",
        "name": "",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getBaseURICount",
    "inputs": [],
    "outputs": [
      {
        "type": "uint256",
        "name": "",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getBatchIdAtIndex",
    "inputs": [
      {
        "type": "uint256",
        "name": "_index",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "type": "uint256",
        "name": "",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getClaimConditionById",
    "inputs": [
      {
        "type": "uint256",
        "name": "_tokenId",
        "internalType": "uint256"
      },
      {
        "type": "uint256",
        "name": "_conditionId",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "type": "tuple",
        "name": "condition",
        "components": [
          {
            "type": "uint256",
            "name": "startTimestamp",
            "internalType": "uint256"
          },
          {
            "type": "uint256",
            "name": "maxClaimableSupply",
            "internalType": "uint256"
          },
          {
            "type": "uint256",
            "name": "supplyClaimed",
            "internalType": "uint256"
          },
          {
            "type": "uint256",
            "name": "quantityLimitPerWallet",
            "internalType": "uint256"
          },
          {
            "type": "bytes32",
            "name": "merkleRoot",
            "internalType": "bytes32"
          },
          {
            "type": "uint256",
            "name": "pricePerToken",
            "internalType": "uint256"
          },
          {
            "type": "address",
            "name": "currency",
            "internalType": "address"
          },
          {
            "type": "string",
            "name": "metadata",
            "internalType": "string"
          }
        ],
        "internalType": "struct IClaimCondition.ClaimCondition"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getDefaultRoyaltyInfo",
    "inputs": [],
    "outputs": [
      {
        "type": "address",
        "name": "",
        "internalType": "address"
      },
      {
        "type": "uint16",
        "name": "",
        "internalType": "uint16"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getPlatformFeeInfo",
    "inputs": [],
    "outputs": [
      {
        "type": "address",
        "name": "",
        "internalType": "address"
      },
      {
        "type": "uint16",
        "name": "",
        "internalType": "uint16"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getRoleAdmin",
    "inputs": [
      {
        "type": "bytes32",
        "name": "role",
        "internalType": "bytes32"
      }
    ],
    "outputs": [
      {
        "type": "bytes32",
        "name": "",
        "internalType": "bytes32"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getRoleMember",
    "inputs": [
      {
        "type": "bytes32",
        "name": "role",
        "internalType": "bytes32"
      },
      {
        "type": "uint256",
        "name": "index",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "type": "address",
        "name": "member",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getRoleMemberCount",
    "inputs": [
      {
        "type": "bytes32",
        "name": "role",
        "internalType": "bytes32"
      }
    ],
    "outputs": [
      {
        "type": "uint256",
        "name": "count",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getRoyaltyInfoForToken",
    "inputs": [
      {
        "type": "uint256",
        "name": "_tokenId",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "type": "address",
        "name": "",
        "internalType": "address"
      },
      {
        "type": "uint16",
        "name": "",
        "internalType": "uint16"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getSupplyClaimedByWallet",
    "inputs": [
      {
        "type": "uint256",
        "name": "_tokenId",
        "internalType": "uint256"
      },
      {
        "type": "uint256",
        "name": "_conditionId",
        "internalType": "uint256"
      },
      {
        "type": "address",
        "name": "_claimer",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "type": "uint256",
        "name": "supplyClaimedByWallet",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "grantRole",
    "inputs": [
      {
        "type": "bytes32",
        "name": "role",
        "internalType": "bytes32"
      },
      {
        "type": "address",
        "name": "account",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "hasRole",
    "inputs": [
      {
        "type": "bytes32",
        "name": "role",
        "internalType": "bytes32"
      },
      {
        "type": "address",
        "name": "account",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "type": "bool",
        "name": "",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "hasRoleWithSwitch",
    "inputs": [
      {
        "type": "bytes32",
        "name": "role",
        "internalType": "bytes32"
      },
      {
        "type": "address",
        "name": "account",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "type": "bool",
        "name": "",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "initialize",
    "inputs": [
      {
        "type": "address",
        "name": "_defaultAdmin",
        "internalType": "address"
      },
      {
        "type": "string",
        "name": "_name",
        "internalType": "string"
      },
      {
        "type": "string",
        "name": "_symbol",
        "internalType": "string"
      },
      {
        "type": "string",
        "name": "_contractURI",
        "internalType": "string"
      },
      {
        "type": "address[]",
        "name": "_trustedForwarders",
        "internalType": "address[]"
      },
      {
        "type": "address",
        "name": "_saleRecipient",
        "internalType": "address"
      },
      {
        "type": "address",
        "name": "_royaltyRecipient",
        "internalType": "address"
      },
      {
        "type": "uint128",
        "name": "_royaltyBps",
        "internalType": "uint128"
      },
      {
        "type": "uint128",
        "name": "_platformFeeBps",
        "internalType": "uint128"
      },
      {
        "type": "address",
        "name": "_platformFeeRecipient",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "isApprovedForAll",
    "inputs": [
      {
        "type": "address",
        "name": "account",
        "internalType": "address"
      },
      {
        "type": "address",
        "name": "operator",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "type": "bool",
        "name": "",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "isTrustedForwarder",
    "inputs": [
      {
        "type": "address",
        "name": "forwarder",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "type": "bool",
        "name": "",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "lazyMint",
    "inputs": [
      {
        "type": "uint256",
        "name": "_amount",
        "internalType": "uint256"
      },
      {
        "type": "string",
        "name": "_baseURIForTokens",
        "internalType": "string"
      },
      {
        "type": "bytes",
        "name": "_data",
        "internalType": "bytes"
      }
    ],
    "outputs": [
      {
        "type": "uint256",
        "name": "batchId",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "maxTotalSupply",
    "inputs": [
      {
        "type": "uint256",
        "name": "",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "type": "uint256",
        "name": "",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "multicall",
    "inputs": [
      {
        "type": "bytes[]",
        "name": "data",
        "internalType": "bytes[]"
      }
    ],
    "outputs": [
      {
        "type": "bytes[]",
        "name": "results",
        "internalType": "bytes[]"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "name",
    "inputs": [],
    "outputs": [
      {
        "type": "string",
        "name": "",
        "internalType": "string"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "nextTokenIdToMint",
    "inputs": [],
    "outputs": [
      {
        "type": "uint256",
        "name": "",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "operatorRestriction",
    "inputs": [],
    "outputs": [
      {
        "type": "bool",
        "name": "",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "owner",
    "inputs": [],
    "outputs": [
      {
        "type": "address",
        "name": "",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "primarySaleRecipient",
    "inputs": [],
    "outputs": [
      {
        "type": "address",
        "name": "",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "renounceRole",
    "inputs": [
      {
        "type": "bytes32",
        "name": "role",
        "internalType": "bytes32"
      },
      {
        "type": "address",
        "name": "account",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "revokeRole",
    "inputs": [
      {
        "type": "bytes32",
        "name": "role",
        "internalType": "bytes32"
      },
      {
        "type": "address",
        "name": "account",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "royaltyInfo",
    "inputs": [
      {
        "type": "uint256",
        "name": "tokenId",
        "internalType": "uint256"
      },
      {
        "type": "uint256",
        "name": "salePrice",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "type": "address",
        "name": "receiver",
        "internalType": "address"
      },
      {
        "type": "uint256",
        "name": "royaltyAmount",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "safeBatchTransferFrom",
    "inputs": [
      {
        "type": "address",
        "name": "from",
        "internalType": "address"
      },
      {
        "type": "address",
        "name": "to",
        "internalType": "address"
      },
      {
        "type": "uint256[]",
        "name": "ids",
        "internalType": "uint256[]"
      },
      {
        "type": "uint256[]",
        "name": "amounts",
        "internalType": "uint256[]"
      },
      {
        "type": "bytes",
        "name": "data",
        "internalType": "bytes"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "safeTransferFrom",
    "inputs": [
      {
        "type": "address",
        "name": "from",
        "internalType": "address"
      },
      {
        "type": "address",
        "name": "to",
        "internalType": "address"
      },
      {
        "type": "uint256",
        "name": "id",
        "internalType": "uint256"
      },
      {
        "type": "uint256",
        "name": "amount",
        "internalType": "uint256"
      },
      {
        "type": "bytes",
        "name": "data",
        "internalType": "bytes"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "saleRecipient",
    "inputs": [
      {
        "type": "uint256",
        "name": "",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "type": "address",
        "name": "",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "setApprovalForAll",
    "inputs": [
      {
        "type": "address",
        "name": "operator",
        "internalType": "address"
      },
      {
        "type": "bool",
        "name": "approved",
        "internalType": "bool"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "setClaimConditions",
    "inputs": [
      {
        "type": "uint256",
        "name": "_tokenId",
        "internalType": "uint256"
      },
      {
        "type": "tuple[]",
        "name": "_conditions",
        "components": [
          {
            "type": "uint256",
            "name": "startTimestamp",
            "internalType": "uint256"
          },
          {
            "type": "uint256",
            "name": "maxClaimableSupply",
            "internalType": "uint256"
          },
          {
            "type": "uint256",
            "name": "supplyClaimed",
            "internalType": "uint256"
          },
          {
            "type": "uint256",
            "name": "quantityLimitPerWallet",
            "internalType": "uint256"
          },
          {
            "type": "bytes32",
            "name": "merkleRoot",
            "internalType": "bytes32"
          },
          {
            "type": "uint256",
            "name": "pricePerToken",
            "internalType": "uint256"
          },
          {
            "type": "address",
            "name": "currency",
            "internalType": "address"
          },
          {
            "type": "string",
            "name": "metadata",
            "internalType": "string"
          }
        ],
        "internalType": "struct IClaimCondition.ClaimCondition[]"
      },
      {
        "type": "bool",
        "name": "_resetClaimEligibility",
        "internalType": "bool"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "setContractURI",
    "inputs": [
      {
        "type": "string",
        "name": "_uri",
        "internalType": "string"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "setDefaultRoyaltyInfo",
    "inputs": [
      {
        "type": "address",
        "name": "_royaltyRecipient",
        "internalType": "address"
      },
      {
        "type": "uint256",
        "name": "_royaltyBps",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "setMaxTotalSupply",
    "inputs": [
      {
        "type": "uint256",
        "name": "_tokenId",
        "internalType": "uint256"
      },
      {
        "type": "uint256",
        "name": "_maxTotalSupply",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "setOperatorRestriction",
    "inputs": [
      {
        "type": "bool",
        "name": "_restriction",
        "internalType": "bool"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "setOwner",
    "inputs": [
      {
        "type": "address",
        "name": "_newOwner",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "setPlatformFeeInfo",
    "inputs": [
      {
        "type": "address",
        "name": "_platformFeeRecipient",
        "internalType": "address"
      },
      {
        "type": "uint256",
        "name": "_platformFeeBps",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "setPrimarySaleRecipient",
    "inputs": [
      {
        "type": "address",
        "name": "_saleRecipient",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "setRoyaltyInfoForToken",
    "inputs": [
      {
        "type": "uint256",
        "name": "_tokenId",
        "internalType": "uint256"
      },
      {
        "type": "address",
        "name": "_recipient",
        "internalType": "address"
      },
      {
        "type": "uint256",
        "name": "_bps",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "setSaleRecipientForToken",
    "inputs": [
      {
        "type": "uint256",
        "name": "_tokenId",
        "internalType": "uint256"
      },
      {
        "type": "address",
        "name": "_saleRecipient",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "supportsInterface",
    "inputs": [
      {
        "type": "bytes4",
        "name": "interfaceId",
        "internalType": "bytes4"
      }
    ],
    "outputs": [
      {
        "type": "bool",
        "name": "",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "symbol",
    "inputs": [],
    "outputs": [
      {
        "type": "string",
        "name": "",
        "internalType": "string"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "totalSupply",
    "inputs": [
      {
        "type": "uint256",
        "name": "",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "type": "uint256",
        "name": "",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "uri",
    "inputs": [
      {
        "type": "uint256",
        "name": "_tokenId",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "type": "string",
        "name": "",
        "internalType": "string"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "verifyClaim",
    "inputs": [
      {
        "type": "uint256",
        "name": "_conditionId",
        "internalType": "uint256"
      },
      {
        "type": "address",
        "name": "_claimer",
        "internalType": "address"
      },
      {
        "type": "uint256",
        "name": "_tokenId",
        "internalType": "uint256"
      },
      {
        "type": "uint256",
        "name": "_quantity",
        "internalType": "uint256"
      },
      {
        "type": "address",
        "name": "_currency",
        "internalType": "address"
      },
      {
        "type": "uint256",
        "name": "_pricePerToken",
        "internalType": "uint256"
      },
      {
        "type": "tuple",
        "name": "_allowlistProof",
        "components": [
          {
            "type": "bytes32[]",
            "name": "proof",
            "internalType": "bytes32[]"
          },
          {
            "type": "uint256",
            "name": "quantityLimitPerWallet",
            "internalType": "uint256"
          },
          {
            "type": "uint256",
            "name": "pricePerToken",
            "internalType": "uint256"
          },
          {
            "type": "address",
            "name": "currency",
            "internalType": "address"
          }
        ],
        "internalType": "struct IDrop1155.AllowlistProof"
      }
    ],
    "outputs": [
      {
        "type": "bool",
        "name": "isOverride",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  }
]


framePtr = F.prev;
var F = {procname: "module abi_file", prev: framePtr, filename: "/root/wef/abi_file.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jscore", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/jscore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jscore", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/jscore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module times", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
framePtr = F;
F.line = 1371;
F.filename = "times.nim";
if (globalThis.utcInstance_1526728308 === undefined) {
  globalThis.utcInstance_1526728308 = [null];
}
F.line = 1372;
if (globalThis.localInstance_1526728309 === undefined) {
  globalThis.localInstance_1526728309 = [null];
}
framePtr = F.prev;
var F = {procname: "module times", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module annotate", prev: framePtr, filename: "/root/.nimble/pkgs2/templates-0.5-65f731a0197c31920174deaab896f85d5c495c50/templates/annotate.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module annotate", prev: framePtr, filename: "/root/.nimble/pkgs2/templates-0.5-65f731a0197c31920174deaab896f85d5c495c50/templates/annotate.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module templates", prev: framePtr, filename: "/root/.nimble/pkgs2/templates-0.5-65f731a0197c31920174deaab896f85d5c495c50/templates.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module templates", prev: framePtr, filename: "/root/.nimble/pkgs2/templates-0.5-65f731a0197c31920174deaab896f85d5c495c50/templates.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimwebc", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimwebc.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimwebc", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimwebc.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimhtml", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimhtml.nim", line: 0};
framePtr = F;
F.line = 96;
F.filename = "nimhtml.nim";
var bodyy_1660944707 = {arg_name: [98,111,100,121], arg_type: [115,116,114,105,110,103], has_default_arg: false, arg_default: []};
F.line = 97;
var id_1660944708 = {arg_name: [105,100], arg_type: [115,116,114,105,110,103], has_default_arg: true, arg_default: [34,34]};
framePtr = F.prev;
var F = {procname: "module nimhtml", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimhtml.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimwind", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimwind.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimwind", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimwind.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimalpine", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimalpine.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimalpine", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimalpine.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module site_comps", prev: framePtr, filename: "/root/wef/site_comps.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module site_comps", prev: framePtr, filename: "/root/wef/site_comps.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function none_1291845679() {
  var result_1291845686 = ({val: null, has: false});

  var F = {procname: "none.none", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  return result_1291845686;

}

function some_1291845691(val_1291845693) {
  var result_1291845694 = ({val: null, has: false});

  var F = {procname: "some.some", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "options.nim";
    result_1291845694.has = true;
    F.line = 141;
    result_1291845694.val = val_1291845693;
  framePtr = F.prev;

  return result_1291845694;

}
async function newJsonRpcProvider_1291845651(RPC_URL_1291845652) {
  var result_1291845663 = null;

  var F = {procname: "nimEthers.newJsonRpcProvider", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimEthers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 31;
    F.filename = "nimEthers.nim";
    var reason = null;
    F.line = 32;
    var pprovider = null;
    F.line = 33;
                pprovider = new ethers.providers.JsonRpcProvider(RPC_URL_1291845652)
            await pprovider._networkPromise.catch((r) => {reason = r})
            
    if (!((reason == null))) {
    F.line = 39;
    result_1291845663 = {Field0: false, Field1: reason.message, Field2: none_1291845679()};
    break BeforeRet;
    }
    
    F.line = 40;
    result_1291845663 = {Field0: true, Field1: "", Field2: some_1291845691(pprovider)};
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1291845663;

}

function isNone_520093979(self_520093981) {
  var result_520093982 = false;

  var F = {procname: "isNone.isNone", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 176;
    F.filename = "options.nim";
    result_520093982 = !(self_520093981.has);
  framePtr = F.prev;

  return result_520093982;

}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556813) || [],[32,46,46,32] || [],HEX24_369098760(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    F.line = 44;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      F.line = 46;
      var iHEX60gensym4_301990110 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_520094472 = 0;
      Label3: {
        F.line = 120;
          Label4: while (true) {
          if (!(i_520094472 < n_301990095)) break Label4;
            F.line = 49;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_520094472;
            F.line = 49;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_520094472 = addInt(i_520094472, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "digitsutils.nim";
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));
  framePtr = F.prev;

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 111;
    F.filename = "digitsutils.nim";
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));
  framePtr = F.prev;

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 115;
    F.filename = "digitsutils.nim";
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));
  framePtr = F.prev;

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "dollars.nim";
    addInt_301990129(result_369098762, 0, x_369098761);
  framePtr = F.prev;

  return result_369098762[0];

}

function auxWriteStackTrace_33556508(f_33556509) {
  var result_33556510 = [[]];

    var it_33556518 = f_33556509;
    var i_33556519 = 0;
    var total_33556520 = 0;
    var tempFrames_33556521 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555835);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556518 == null)) && (i_33556519 <= 63))) break Label2;
          tempFrames_33556521[i_33556519].Field0 = it_33556518.procname;
          tempFrames_33556521[i_33556519].Field1 = it_33556518.line;
          tempFrames_33556521[i_33556519].Field2 = it_33556518.filename;
          i_33556519 += 1;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556518 == null))) break Label4;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    result_33556510[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556520 == i_33556519))) {
    result_33556510[0].push.apply(result_33556510[0], [40]);;
    result_33556510[0].push.apply(result_33556510[0], HEX24_369098760((total_33556520 - i_33556519)));;
    result_33556510[0].push.apply(result_33556510[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556554 = 0;
      var colontmp__520094465 = 0;
      colontmp__520094465 = (i_33556519 - 1);
      var res_520094466 = colontmp__520094465;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_520094466)) break Label7;
            j_33556554 = res_520094466;
            result_33556510[0].push.apply(result_33556510[0], cstrToNimstr(tempFrames_33556521[j_33556554].Field2));;
            if ((0 < tempFrames_33556521[j_33556554].Field1)) {
            result_33556510[0].push.apply(result_33556510[0], [40]);;
            addInt_301990129(result_33556510, 0, tempFrames_33556521[j_33556554].Field1);
            if (false) {
            result_33556510[0].push.apply(result_33556510[0], [44,32]);;
            addInt_301990129(result_33556510, 0, 0);
            }
            
            result_33556510[0].push.apply(result_33556510[0], [41]);;
            }
            
            result_33556510[0].push.apply(result_33556510[0], [32,97,116,32]);;
            add_33556373(result_33556510, 0, tempFrames_33556521[j_33556554].Field0);
            result_33556510[0].push.apply(result_33556510[0], [10]);;
            res_520094466 -= 1;
          }
      };
    };

  return result_33556510[0];

}

function rawWriteStackTrace_33556604() {
  var result_33556605 = [];

    if (!((framePtr == null))) {
    result_33556605 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10] || []).concat(auxWriteStackTrace_33556508(framePtr) || []), NTI33554449);
    }
    else {
      result_33556605 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556605;

}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 635;
    F.filename = "system.nim";
    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }  framePtr = F.prev;

  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    buf_33556650[0].push.apply(buf_33556650[0], rawWriteStackTrace_33556604());;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function get_520093971(self_520093973) {
  var result_520093974 = null;

  var F = {procname: "get.get", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    if (isNone_520093979(self_520093973)) {
    F.line = 202;
    F.filename = "options.nim";
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI671088660, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    F.line = 203;
    result_520093974 = self_520093973["val"];
  framePtr = F.prev;

  return result_520093974;

}

function in_local_storage_654312123(key_654312124) {
  var result_654312125 = false;

  var F = {procname: "nimjs.in_local_storage", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((window.localStorage.getItem(key_654312124) == null)) {
    F.line = 331;
    F.filename = "nimjs.nim";
    result_654312125 = false;
    break BeforeRet;
    }
    else {
      F.line = 333;
      result_654312125 = true;
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_654312125;

}

function none_654312134() {
  var result_654312141 = ({val: null, has: false});

  var F = {procname: "none.none", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  return result_654312141;

}

function some_654312142(val_654312144) {
  var result_654312145 = ({val: null, has: false});

  var F = {procname: "some.some", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "options.nim";
    result_654312145.has = true;
    F.line = 141;
    result_654312145.val = val_654312144;
  framePtr = F.prev;

  return result_654312145;

}

function grab_val_from_local_storage_654312126(key_654312127) {
  var result_654312133 = ({val: null, has: false});

  var F = {procname: "nimjs.grab_val_from_local_storage", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(in_local_storage_654312123(key_654312127))) {
    F.line = 337;
    F.filename = "nimjs.nim";
    result_654312133 = nimCopy(result_654312133, none_654312134(), NTI654311953);
    break BeforeRet;
    }
    else {
      F.line = 339;
      result_654312133 = nimCopy(result_654312133, some_654312142(window.localStorage.getItem(key_654312127)), NTI654311953);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_654312133;

}

function isNone_520093738(self_520093740) {
  var result_520093741 = false;

  var F = {procname: "isNone.isNone", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 176;
    F.filename = "options.nim";
    result_520093741 = !(self_520093740.has);
  framePtr = F.prev;

  return result_520093741;

}

function get_520093755(self_520093757) {
  var result_520093758 = null;

  var F = {procname: "get.get", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    if (isNone_520093738(self_520093757)) {
    F.line = 202;
    F.filename = "options.nim";
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI671088660, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    F.line = 203;
    result_520093758 = self_520093757["val"];
  framePtr = F.prev;

  return result_520093758;

}

function get_client_wallet_from_local_storage_520093729() {
  var result_520093732 = {Field0: false, Field1: null};

  var F = {procname: "contribute_page_fe.get_client_wallet_from_local_storage", prev: framePtr, filename: "/root/wef/contribute_page_fe.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 32;
    F.filename = "contribute_page_fe.nim";
    var addy_520093733 = grab_val_from_local_storage_654312126("user_wallet_address");
    if (isNone_520093738(addy_520093733)) {
    F.line = 34;
    var colontmp__520094476 = false;
    F.line = 34;
    var colontmp__520094477 = "";
    F.line = 34;
    result_520093732 = nimCopy(result_520093732, {Field0: colontmp__520094476, Field1: colontmp__520094477}, NTI520093704);
    break BeforeRet;
    }
    
    F.line = 35;
    var colontmp__520094478 = true;
    F.line = 35;
    var colontmp__520094479 = get_520093755(addy_520093733);
    F.line = 35;
    result_520093732 = nimCopy(result_520093732, {Field0: colontmp__520094478, Field1: colontmp__520094479}, NTI520093704);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093732;

}

function gebi_strict_654311629(id_654311630) {
  var result_654311631 = null;

  var F = {procname: "nimjs.gebi_strict", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 81;
    F.filename = "nimjs.nim";
    var el_654311632 = document.getElementById(id_654311630);
    if ((el_654311632 == null)) {
    F.line = 83;
    raiseException({message: ([69,108,101,109,101,110,116,32,119,105,116,104,32,105,100,32,39] || []).concat(cstrToNimstr(id_654311630) || [],[39,32,110,111,116,32,102,111,117,110,100] || []), parent: null, m_type: NTI654311427, name: null, trace: [], up: null}, "ElementNotFound");
    }
    else {
      F.line = 85;
      result_654311631 = el_654311632;
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_654311631;

}

function sysFatal_268435501(message_268435504) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_268435499(msg_268435500) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal_268435501(msg_268435500);
  framePtr = F.prev;

  
}

function failedAssertImpl_268435541(msg_268435542) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert_268435499(msg_268435542);
  framePtr = F.prev;

  
}

function newBetterfetchOptions_520094080(metod_520094082, body_520094083, mode_520094084, credentials_520094085, cache_520094086, referrerPolicy_520094087, keepalive_520094088, redirect_520094089, referrer_520094090, integrity_520094091, headers_520094092) {
    var Temporary1;
    var Temporary2;

  var result_520094093 = null;

  var F = {procname: "newBetterfetchOptions.newBetterfetchOptions", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "nimjs.nim";
    if (!((ConstSet2[metod_520094082] != undefined))) {
    Temporary1 = body_520094083;
    }
    else {
    Temporary1 = null;
    }
    
    F.line = 40;
    switch (metod_520094082) {
    case 0:
      Temporary2 = "HEAD";
      break;
    case 1:
      Temporary2 = "GET";
      break;
    case 2:
      Temporary2 = "POST";
      break;
    case 3:
      Temporary2 = "PUT";
      break;
    case 4:
      Temporary2 = "DELETE";
      break;
    case 8:
      Temporary2 = "PATCH";
      break;
    default: 
      Temporary2 = "GET";
      break;
    }
    result_520094093 = {body: Temporary1, mode: toJSStr(reprEnum(mode_520094084, NTI1107296260)), credentials: toJSStr(reprEnum(credentials_520094085, NTI1107296261)), cache: toJSStr(reprEnum(cache_520094086, NTI1107296262)), referrerPolicy: toJSStr(reprEnum(referrerPolicy_520094087, NTI1107296264)), keepalive: keepalive_520094088, redirect: toJSStr(reprEnum(redirect_520094089, NTI1107296263)), referrer: referrer_520094090, integrity: integrity_520094091, headers: headers_520094092, method: Temporary2, m_type: NTI520093988};
  framePtr = F.prev;

  return result_520094093;

}
async function post_520094028(url_520094030, body_520094031, incoming_headers_520094032) {
  var result_520094033 = null;

  var F = {procname: "post.post", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
  framePtr = F;
    F.line = 304;
    F.filename = "nimjs.nim";
    F.line = 295;
    var headers_520094043 = new Headers();
    Label1: {
      F.line = 296;
      var k_520094066 = [];
      F.line = 296;
      var v_520094067 = [];
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094483 = 0;
      F.line = 242;
      var L_520094484 = (incoming_headers_520094032).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094483 < L_520094484)) break Label3;
            F.line = 296;
            F.filename = "nimjs.nim";
            k_520094066 = incoming_headers_520094032[chckIndx(i_520094483, 0, (incoming_headers_520094032).length - 1)]["Field0"];
            F.line = 296;
            v_520094067 = incoming_headers_520094032[chckIndx(i_520094483, 0, (incoming_headers_520094032).length - 1)]["Field1"];
            F.line = 296;
            headers_520094043.append(toJSStr(k_520094066), toJSStr(v_520094067));
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094483 = addInt(i_520094483, 1);
            if (!(((incoming_headers_520094032).length == L_520094484))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/root/.choosenim/toolchains/nim-2.0.0/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 299;
    F.filename = "nimjs.nim";
    var options0_520094146 = newBetterfetchOptions_520094080(2, body_520094031, 0, 1, 0, 1, false, 0, "client", "", headers_520094043);
    result_520094033 = fetch(url_520094030, options0_520094146);
  framePtr = F.prev;

  return result_520094033;

}

function toggleHidden_654311943(el_654311944) {
  var F = {procname: "nimjs.toggleHidden", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
  framePtr = F;
    F.line = 232;
    F.filename = "nimjs.nim";
    el_654311944.classList.toggle("hidden");
  framePtr = F.prev;

  
}

function push_to_local_storage_654312180(key_654312181, val_654312182) {
  var F = {procname: "nimjs.push_to_local_storage", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
  framePtr = F;
    F.line = 342;
    F.filename = "nimjs.nim";
    window.localStorage.setItem(key_654312181, val_654312182);
  framePtr = F.prev;

  
}

function Template_654311923(content_654311924) {
  var result_654311925 = null;

  var F = {procname: "nimjs.Template", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 207;
    F.filename = "nimjs.nim";
    var p_654311926 = document.createElement("template");
    F.line = 208;
    p_654311926.innerHTML = content_654311924;
    F.line = 209;
    var node_654311927 = p_654311926.content.cloneNode(true);
    F.line = 210;
    result_654311925 = node_654311927;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_654311925;

}

function addElement_654311933(el_654311934, child_654311935) {
  var F = {procname: "nimjs.addElement", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
  framePtr = F;
    F.line = 218;
    F.filename = "nimjs.nim";
    el_654311934.appendChild(Template_654311923(child_654311935));
  framePtr = F.prev;

  
}

function none_520093848() {
  var result_520093855 = ({val: [], has: false});

  var F = {procname: "none.none", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  return result_520093855;

}

function some_520093860(val_520093862) {
  var result_520093863 = ({val: [], has: false});

  var F = {procname: "some.some", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "options.nim";
    result_520093863.has = true;
    F.line = 141;
    result_520093863.val = nimCopy(null, val_520093862, NTI520093799);
  framePtr = F.prev;

  return result_520093863;

}
async function get_nfts_520093809(wallet_520093810) {
  var result_520093818 = null;

  var F = {procname: "contribute_page_fe.get_nfts", prev: framePtr, filename: "/root/wef/contribute_page_fe.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 44;
    F.filename = "contribute_page_fe.nim";
    var nfts_520093832 = [];
    Label1: {
      F.line = 45;
      var nft_index_520093833 = 0;
      F.line = 107;
      F.filename = "iterators_1.nim";
      var res_520094494 = 0;
      Label2: {
        F.line = 108;
          Label3: while (true) {
          if (!(res_520094494 <= wallet_520093810.contract.num_editions)) break Label3;
            F.line = 45;
            F.filename = "contribute_page_fe.nim";
            nft_index_520093833 = res_520094494;
            F.line = 46;
            var balance_520093839 = (await wallet_520093810.contract.contract.balanceOf(wallet_520093810.address, nft_index_520093833));
            if ((0.0 < parseFloat(balance_520093839))) {
            F.line = 48;
            nfts_520093832.push(((nft_index_520093833) | 0));;
            }
            
            F.line = 110;
            F.filename = "iterators_1.nim";
            res_520094494 = addInt(res_520094494, 1);
          }
      };
    };
    if (((nfts_520093832).length == 0)) {
    F.line = 51;
    F.filename = "contribute_page_fe.nim";
    result_520093818 = none_520093848();
    break BeforeRet;
    }
    
    F.line = 53;
    result_520093818 = some_520093860(nfts_520093832);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093818;

}

function isSome_520094268(self_520094270) {
  var result_520094271 = false;

  var F = {procname: "isSome.isSome", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 161;
    F.filename = "options.nim";
    result_520094271 = self_520094270.has;
  framePtr = F.prev;

  return result_520094271;

}

function isNone_520094297(self_520094299) {
  var result_520094300 = false;

  var F = {procname: "isNone.isNone", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 176;
    F.filename = "options.nim";
    result_520094300 = !(self_520094299.has);
  framePtr = F.prev;

  return result_520094300;

}

function get_520094289(self_520094291) {
  var result_520094292 = [];

  var F = {procname: "get.get", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    if (isNone_520094297(self_520094291)) {
    F.line = 202;
    F.filename = "options.nim";
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI671088660, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    F.line = 203;
    result_520094292 = self_520094291["val"];
  framePtr = F.prev;

  return result_520094292;

}

function nftCard_520093950() {
  var result_520093951 = null;

  var F = {procname: "contribute_page_fe.nftCard", prev: framePtr, filename: "/root/wef/contribute_page_fe.nim", line: 0};
  framePtr = F;
    F.line = 57;
    F.filename = "contribute_page_fe.nim";
    result_520093951 = "<div class=\"bg-white rounded-xl shadow-md overflow-hidden\">\n    <!-- Image section -->\n    <div class=\"relative\">\n        <img class=\"w-full h-60 object-cover\" src=\"https://placehold.it/1000x1000\" alt=\"NFT Image\">\n        \n        <!-- Top-right price section -->\n        <div class=\"absolute top-4 right-4 bg-white py-1 px-2 rounded-full text-sm\">\n            ⧫ 0.28\n        </div>\n    </div>\n\n    <!-- Title section -->\n    <div class=\"p-4\">\n        <!-- Title and avatar section -->\n        <div class=\"flex items-center justify-between mb-2\">\n            <div class=\"flex items-center space-x-2\">\n                <!-- Avatar -->\n                <img class=\"h-8 w-8 rounded-full\" src=\"https://placehold.it/50x50\" alt=\"Avatar\">\n                <!-- Name -->\n                <div class=\"text-sm\">\n                    <p class=\"font-medium text-gray-900\">\n                        Monk Punk #128\n                    </p>\n                    <p class=\"text-gray-500\">\n                        not for sale\n                    </p>\n                </div>\n            </div>\n            \n            <!-- Auction timer section -->\n            <div class=\"text-sm text-gray-500\">\n                Ending in 10h 58m\n            </div>\n        </div>\n    </div>\n</div>\n";
  framePtr = F.prev;

  return result_520093951;

}

function click_654311676(el_654311677, cb_654311680) {
  var F = {procname: "nimjs.click", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
  framePtr = F;
    F.line = 120;
    F.filename = "nimjs.nim";
    el_654311677.addEventListener("click", cb_654311680, false);
  framePtr = F.prev;

  
}

function handleShowShipping_520094196() {
    
function HEX3Aanonymous_520094209(event_520094210) {
      var F = {procname: "handleShowShipping.:anonymous", prev: framePtr, filename: "/root/wef/contribute_page_fe.nim", line: 0};
      framePtr = F;
        F.line = 134;
        F.filename = "contribute_page_fe.nim";
        toggleHidden_654311943(contact_form_520094009);
      framePtr = F.prev;

      
    }

  var F = {procname: "contribute_page_fe.handleShowShipping", prev: framePtr, filename: "/root/wef/contribute_page_fe.nim", line: 0};
  framePtr = F;
    F.line = 128;
    F.filename = "contribute_page_fe.nim";
    var submitted_shipping_520094197 = grab_val_from_local_storage_654312126("submitted_shipping");
    if (isNone_520093738(submitted_shipping_520094197)) {
    F.line = 31;
    F.filename = "icecream.nim";
    console.trace("no shipping info");
    F.line = 31;
    console.trace("Show the shipping form");
    F.line = 132;
    F.filename = "contribute_page_fe.nim";
    click_654311676(close_contact_form_btn_520094010, HEX3Aanonymous_520094209);
    F.line = 136;
    toggleHidden_654311943(contact_form_520094009);
    }
    
  framePtr = F.prev;

  
}
async function getNfts_520094243() {
  var result_520094245 = null;

  var F = {procname: "contribute_page_fe.getNfts", prev: framePtr, filename: "/root/wef/contribute_page_fe.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(wallet_520094004.Field0)) {
    F.line = 31;
    F.filename = "icecream.nim";
    console.trace("not connected");
    F.line = 31;
    console.trace("Show the connect button");
    F.line = 142;
    F.filename = "contribute_page_fe.nim";
    get_nfts_loader_520094007.remove();
    F.line = 143;
    addElement_654311933(red_card_520094008, "            <button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">\n                Connect Wallet\n            </button>\n            ");
    }
    else {
      F.line = 153;
      var wef_wallet_520094255 = {address: wallet_520094004.Field1, contract: {contract:     new ethers.Contract("0x95161d22A309C21FbC8bA674f4f38e5F91BCea30", abi, provider_520094001)
    , num_editions: 3, address: "0x95161d22A309C21FbC8bA674f4f38e5F91BCea30"}};
      F.line = 31;
      F.filename = "icecream.nim";
      console.trace(wef_wallet_520094255);
      F.line = 162;
      F.filename = "contribute_page_fe.nim";
      var nfts_520094263 = (await get_nfts_520093809(wef_wallet_520094255));
      if (isSome_520094268(nfts_520094263)) {
      F.line = 31;
      F.filename = "icecream.nim";
      console.trace("The client has purchased nfts");
      F.line = 31;
      console.trace(get_520094289(nfts_520094263));
      F.line = 168;
      F.filename = "contribute_page_fe.nim";
      get_nfts_loader_520094007.remove();
      Label1: {
        F.line = 169;
        var nft_520094355 = 0;
        F.line = 239;
        F.filename = "iterators.nim";
        var colontmp__520094487 = [];
        F.line = 169;
        F.filename = "contribute_page_fe.nim";
        colontmp__520094487 = get_520094289(nfts_520094263);
        F.line = 241;
        F.filename = "iterators.nim";
        var i_520094489 = 0;
        F.line = 242;
        var L_520094490 = (colontmp__520094487).length;
        Label2: {
          F.line = 243;
            Label3: while (true) {
            if (!(i_520094489 < L_520094490)) break Label3;
              F.line = 169;
              F.filename = "contribute_page_fe.nim";
              nft_520094355 = colontmp__520094487[chckIndx(i_520094489, 0, (colontmp__520094487).length - 1)];
              F.line = 169;
              addElement_654311933(red_card_520094008, nftCard_520093950());
              F.line = 245;
              F.filename = "iterators.nim";
              i_520094489 = addInt(i_520094489, 1);
              if (!(((colontmp__520094487).length == L_520094490))) {
              F.line = 246;
              failedAssertImpl_268435541(makeNimstrLit("/root/.choosenim/toolchains/nim-2.0.0/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      F.line = 172;
      F.filename = "contribute_page_fe.nim";
      handleShowShipping_520094196();
      }
      else {
        F.line = 31;
        F.filename = "icecream.nim";
        console.trace("no nfts");
      }
      
    }
    
    F.line = 148;
    F.filename = "asyncjs.nim";
    result_520094245 = undefined;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520094245;

}
async function HEX3Aanonymous_520094012(event_520094013) {
  var result_520094015 = null;

  var F = {procname: "contribute_page_fe.:anonymous", prev: framePtr, filename: "/root/wef/contribute_page_fe.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 113;
    F.filename = "contribute_page_fe.nim";
    event_520094013.preventDefault();
    F.line = 114;
    var form_data_520094021 = new FormData(this);
    F.line = 115;
    var addy_520094022 = wallet_520094004.Field1;
    F.line = 116;
    Label1: {
      F.line = 116;
      var fmtRes_520094027 = [mnewString(0)];
      F.line = 116;
      fmtRes_520094027[0].push.apply(fmtRes_520094027[0], [47,99,111,110,116,114,105,98,117,116,101,47,99,111,110,116,97,99,116,45,102,111,114,109,47]);;
      F.line = 649;
      F.filename = "strformat.nim";
      add_33556373(fmtRes_520094027, 0, addy_520094022);
    };
    var post_req_520094156 = (await post_520094028(toJSStr(fmtRes_520094027[0]), form_data_520094021, []));
    if (!(post_req_520094156.ok)) {
    F.line = 118;
    F.filename = "contribute_page_fe.nim";
    alert(("ERROR SUBMITTING FORM" + post_req_520094156.body));;
    }
    else {
      F.line = 120;
      alert(("SUCCESS" + post_req_520094156.body));;
      F.line = 121;
      toggleHidden_654311943(contact_form_520094009);
      F.line = 122;
      push_to_local_storage_654312180("submitted_shipping", "true");
    }
    
    F.line = 148;
    F.filename = "asyncjs.nim";
    result_520094015 = undefined;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520094015;

}
var F = {procname: "module contribute_page_fe", prev: framePtr, filename: "/root/wef/contribute_page_fe.nim", line: 0};
framePtr = F;
F.line = 17;
F.filename = "contribute_page_fe.nim";
import {MetaMaskWallet, ethers} from "./thirdweb/dist/thirdweb.js";

F.line = 96;
var provider_req_520093956 = (await newJsonRpcProvider_1291845651("https://goerli.infura.io/v3/884a1eec1b9343bb81fc7778dfad1f39"));
if (!(provider_req_520093956.Field0)) {
F.line = 40;
F.filename = "icecream.nim";
console.error(provider_req_520093956.Field1);
}

F.line = 100;
F.filename = "contribute_page_fe.nim";
var provider_520094001 = get_520093971(provider_req_520093956.Field2);
F.line = 31;
F.filename = "icecream.nim";
console.trace(provider_520094001);
F.line = 103;
F.filename = "contribute_page_fe.nim";
var wallet_520094004 = get_client_wallet_from_local_storage_520093729();
F.line = 31;
F.filename = "icecream.nim";
console.trace(wallet_520094004);
F.line = 106;
F.filename = "contribute_page_fe.nim";
var get_nfts_loader_520094007 = gebi_strict_654311629("get-nfts-loader");
F.line = 107;
var red_card_520094008 = gebi_strict_654311629("red-card");
F.line = 108;
var contact_form_520094009 = gebi_strict_654311629("contact-form");
F.line = 109;
var close_contact_form_btn_520094010 = gebi_strict_654311629("close-contact-form");
F.line = 111;
contact_form_520094009.addEventListener("submit", HEX3Aanonymous_520094012)
;
F.line = 178;
(await getNfts_520094243());
framePtr = F.prev;
var F = {procname: "module contribute_page_fe", prev: framePtr, filename: "/root/wef/contribute_page_fe.nim", line: 0};
framePtr = F;
framePtr = F.prev;
