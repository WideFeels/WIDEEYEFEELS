/* Generated by the Nim Compiler v2.0.0 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI1543503875 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI654311427 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520093703 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI654312000 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI671088660 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1509952017 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509951290 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509949509 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1509949470 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1509951153 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509950457 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1509950987 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509950929 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509949479 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1509949457 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1509949633 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509949474 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1509949472 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509950493 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509950803 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509949484 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1509949464 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1509950468 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI788529176 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1509950459 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1509949515 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1509949514 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1509949513 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509949478 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1509949501 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1509949468 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1509949458 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1509949489 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1509949465 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1509949493 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1509949466 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1509949497 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1509949467 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1509949505 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1509949469 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1509949473 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
NTI1509949469.base = NTI1509949505;
NTI1509949467.base = NTI1509949497;
NTI1509949466.base = NTI1509949493;
NTI1509949465.base = NTI1509949489;
var NNI1509949458 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1509949458, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1509949458, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1509949458, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1509949458, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1509949458, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1509949458, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1509949458, name: "Sunday", len: 0, sons: null}}};
NTI1509949458.node = NNI1509949458;
NTI1509949468.base = NTI1509949501;
var NNI1509949513 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI1509949514, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI1509949515, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]};
NTI1509949513.node = NNI1509949513;
NTI1509949478.base = NTI1509949513;
var NNI1509949473 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI1509949469, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI1509949467, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI1509949466, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI1509949465, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI33554435, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI33554435, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI33554435, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI1509949458, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI1509949468, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI1509949478, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}]};
NTI1509949473.node = NNI1509949473;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI1509949473.base = NTI33555173;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI33555835 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555835.node = NNI33555835;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
var NNI1509950459 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1509950459.node = NNI1509950459;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217746.base = NTI33555179;
NTI1509950459.base = NTI134217746;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI788529176 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI788529176.node = NNI788529176;
var NNI1509950468 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1509950468.node = NNI1509950468;
NTI1509949464.base = NTI1509949484;
var NNI1509950803 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1509949464, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1509949464, name: "b", sons: null}]};
NTI1509950803.node = NNI1509950803;
var NNI1509950493 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI1509949458, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1509950493.node = NNI1509950493;
var NNI1509949472 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1509949469, name: "nanosecond", sons: null}]};
NTI1509949472.node = NNI1509949472;
var NNI1509949474 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1509949469, name: "nanosecond", sons: null}]};
NTI1509949474.node = NNI1509949474;
var NNI1509949457 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1509949457, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1509949457, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1509949457, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1509949457, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1509949457, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1509949457, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1509949457, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1509949457, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1509949457, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1509949457, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1509949457, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1509949457, name: "December", len: 0, sons: null}}};
NTI1509949457.node = NNI1509949457;
var NNI1509949633 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1509949464, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1509949457, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1509949633.node = NNI1509949633;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
var NNI1509949479 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI1509949472, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}]};
NTI1509949479.node = NNI1509949479;
var NNI1509950929 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1509949465, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1509949465, name: "b", sons: null}]};
NTI1509950929.node = NNI1509950929;
var NNI1509950987 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1509949466, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1509949466, name: "b", sons: null}]};
NTI1509950987.node = NNI1509950987;
var NNI1509950457 = {kind: 2, offset: 0, typ: null, name: null, len: 38, sons: {"0": {kind: 1, offset: 0, typ: NTI1509950457, name: "d", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1509950457, name: "dd", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1509950457, name: "ddd", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1509950457, name: "dddd", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1509950457, name: "GG", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1509950457, name: "GGGG", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1509950457, name: "h", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1509950457, name: "hh", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1509950457, name: "H", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1509950457, name: "HH", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1509950457, name: "m", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1509950457, name: "mm", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1509950457, name: "M", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1509950457, name: "MM", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI1509950457, name: "MMM", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI1509950457, name: "MMMM", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI1509950457, name: "s", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI1509950457, name: "ss", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI1509950457, name: "fff", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI1509950457, name: "ffffff", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI1509950457, name: "fffffffff", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI1509950457, name: "t", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI1509950457, name: "tt", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI1509950457, name: "yy", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI1509950457, name: "yyyy", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI1509950457, name: "YYYY", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI1509950457, name: "uuuu", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI1509950457, name: "UUUU", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI1509950457, name: "V", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI1509950457, name: "VV", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI1509950457, name: "z", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI1509950457, name: "zz", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI1509950457, name: "zzz", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI1509950457, name: "zzzz", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI1509950457, name: "ZZZ", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI1509950457, name: "ZZZZ", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI1509950457, name: "g", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI1509950457, name: "Lit", len: 0, sons: null}}};
NTI1509950457.node = NNI1509950457;
var NNI1509951153 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1509949469, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1509949469, name: "b", sons: null}]};
NTI1509951153.node = NNI1509951153;
NTI1509949470.base = NTI1509949509;
var NNI1509951290 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1509949470, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1509949470, name: "b", sons: null}]};
NTI1509951290.node = NNI1509951290;
var NNI1509952017 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1509949474, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1509949474, name: "Field1", sons: null}]};
NTI1509952017.node = NNI1509952017;
var NNI671088660 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI671088660.node = NNI671088660;
NTI671088660.base = NTI33555178;
var NNI654312000 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554450, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI654312000.node = NNI654312000;
var NNI520093703 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554466, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554450, name: "Field1", sons: null}]};
NTI520093703.node = NNI520093703;
var NNI654311427 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI654311427.node = NNI654311427;
NTI654311427.base = NTI33555177;
var NNI1543503875 = {kind: 2, offset: 0, typ: null, name: null, len: 13, sons: {"0": {kind: 1, offset: 0, typ: NTI1543503875, name: "connect_wallet_modal", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1543503875, name: "connect_wallet_modal_metamask_btn", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1543503875, name: "connect_wallet_modal_cw_btn", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1543503875, name: "close_connect_wallet_modal_btn", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1543503875, name: "connect_wallet_btn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1543503875, name: "wallet_address_btn", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1543503875, name: "play_card", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1543503875, name: "nft_accordions", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1543503875, name: "presale_card", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1543503875, name: "loading_box", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1543503875, name: "scenario_btn", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1543503875, name: "second_scenario_btn", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1543503875, name: "cgpt_spinner", len: 0, sons: null}}};
NTI1543503875.node = NNI1543503875;

function mnewString(len_33557003) {
        return new Array(len_33557003);
  

  
}

function arrayConstr(len_33557314, value_33557315, typ_33557316) {
        var result = new Array(len_33557314);
    for (var i = 0; i < len_33557314; ++i) result[i] = nimCopy(null, value_33557315, typ_33557316);
    return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    e_33556653.trace = nimCopy(null, rawWriteStackTrace_33556604(), NTI33554449);
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}
var ConstSet2 = setConstr([48, 57]);
var ConstSet3 = setConstr([48, 57]);

function divInt(a_33557062, b_33557063) {
        if (b_33557063 == 0) raiseDivByZero();
    if (b_33557063 == -1 && a_33557062 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557062 / b_33557063);
  

  
}

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet4 = setConstr([65, 90]);

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}
    var unitWeights_1509949590 = new BigInt64Array([1n, 1000n, 1000000n, 1000000000n, 60000000000n, 3600000000000n, 86400000000000n, 604800000000000n]);

function divInt64(a_33557084, b_33557085) {
        if (b_33557085 == 0n) raiseDivByZero();
    if (b_33557085 == -1n && a_33557084 == 9223372036854775807n) raiseOverflow();
    return a_33557084 / b_33557085;
  

  
}

function modInt(a_33557066, b_33557067) {
        if (b_33557067 == 0) raiseDivByZero();
    if (b_33557067 == -1 && a_33557066 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557066 % b_33557067);
  

  
}

function modInt64(a_33557088, b_33557089) {
        if (b_33557089 == 0n) raiseDivByZero();
    if (b_33557089 == -1n && a_33557088 == 9223372036854775807n) raiseOverflow();
    return a_33557088 % b_33557089;
  

  
}

function addInt64(a_33557072, b_33557073) {
        var result = a_33557072 + b_33557073;
    checkOverflowInt64(result);
    return result;
  

  
}

function subInt64(a_33557076, b_33557077) {
        var result = a_33557076 - b_33557077;
    checkOverflowInt64(result);
    return result;
  

  
}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}

function absInt(a_33557098) {
    var Temporary1;

  var result_33557099 = 0;

    if ((a_33557098 < 0)) {
    Temporary1 = (a_33557098 * (-1));
    }
    else {
    Temporary1 = a_33557098;
    }
    
    result_33557099 = Temporary1;

  return result_33557099;

}
    var daysUntilMonthLeap_1509949724 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_1509949723 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);

function reprEnum(e_33557576, typ_33557577) {
  var result_33557578 = [];

  var F = {procname: "system.reprEnum", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system/reprjs.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "reprjs.nim";
    var tmp_33557579 = false;
    F.line = 31;
    var item_33557580 = typ_33557577.node.sons[e_33557576];
    F.line = 32;
    tmp_33557579 = item_33557580 !== undefined
    if (tmp_33557579) {
    F.line = 34;
    result_33557578 = nimCopy(null, makeNimstrLit(item_33557580.name), NTI33554449);
    }
    else {
      F.line = 36;
      result_33557578 = nimCopy(null, (HEX24_369098760(e_33557576) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_33557578;

}
var ConstSet5 = setConstr(43, 45);
var ConstSet6 = setConstr(43, 45);
      var DurationZero_1509949931 = {seconds: 0n, nanosecond: 0};

function negInt(a_33557092) {
  var result_33557093 = 0;

    result_33557093 = (a_33557092 * (-1));

  return result_33557093;

}
    var f2_520093727 = {patterns: [24, 37, 1, 45, 13, 37, 1, 45, 1], formatStr: [121,121,121,121,45,77,77,45,100,100]};
var DefaultLocale_1509951336 = {MMM: [[74,97,110], [70,101,98], [77,97,114], [65,112,114], [77,97,121], [74,117,110], [74,117,108], [65,117,103], [83,101,112], [79,99,116], [78,111,118], [68,101,99]], MMMM: [[74,97,110,117,97,114,121], [70,101,98,114,117,97,114,121], [77,97,114,99,104], [65,112,114,105,108], [77,97,121], [74,117,110,101], [74,117,108,121], [65,117,103,117,115,116], [83,101,112,116,101,109,98,101,114], [79,99,116,111,98,101,114], [78,111,118,101,109,98,101,114], [68,101,99,101,109,98,101,114]], ddd: [[77,111,110], [84,117,101], [87,101,100], [84,104,117], [70,114,105], [83,97,116], [83,117,110]], dddd: [[77,111,110,100,97,121], [84,117,101,115,100,97,121], [87,101,100,110,101,115,100,97,121], [84,104,117,114,115,100,97,121], [70,114,105,100,97,121], [83,97,116,117,114,100,97,121], [83,117,110,100,97,121]]};
var F = {procname: "module macros", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module dom", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/dom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module dom", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/dom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/hashes.nim", line: 0};
framePtr = F;
F.line = 218;
F.filename = "hashes.nim";
var objectID_1040187569 = [0];
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module httpcore", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/httpcore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module httpcore", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/httpcore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/jsffi.nim", line: 0};
framePtr = F;
F.line = 45;
F.filename = "jsffi.nim";
F.line = 46;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module asyncjs", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/asyncjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module asyncjs", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/asyncjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsformdata", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/jsformdata.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsformdata", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/jsformdata.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsheaders", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/jsheaders.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsheaders", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/jsheaders.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsfetch", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/jsfetch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsfetch", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/jsfetch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsconsole", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/jsconsole.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsconsole", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/jsconsole.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jswebsockets", prev: framePtr, filename: "/root/.nimble/pkgs2/nodejs-18.12.0-8438d7d686f8bece0979923830323b85aea32237/nodejs/jswebsockets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jswebsockets", prev: framePtr, filename: "/root/.nimble/pkgs2/nodejs-18.12.0-8438d7d686f8bece0979923830323b85aea32237/nodejs/jswebsockets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimjs", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimjs", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module icecream", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/icecream.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module icecream", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/icecream.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimEthers", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimEthers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimEthers", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimEthers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimThirdweb", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimThirdweb.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimThirdweb", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimThirdweb.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module consts", prev: framePtr, filename: "/root/wef/consts.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module consts", prev: framePtr, filename: "/root/wef/consts.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumerate", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/enumerate.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumerate", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/enumerate.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objvar", prev: framePtr, filename: "/root/.nimble/pkgs2/jsony-1.1.5-6aeb83e7481ca8686396a568096054bc668294df/jsony/objvar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objvar", prev: framePtr, filename: "/root/.nimble/pkgs2/jsony-1.1.5-6aeb83e7481ca8686396a568096054bc668294df/jsony/objvar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module decode_helpers", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/decode_helpers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module decode_helpers", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/decode_helpers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsony", prev: framePtr, filename: "/root/.nimble/pkgs2/jsony-1.1.5-6aeb83e7481ca8686396a568096054bc668294df/jsony.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsony", prev: framePtr, filename: "/root/.nimble/pkgs2/jsony-1.1.5-6aeb83e7481ca8686396a568096054bc668294df/jsony.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jscore", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/jscore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jscore", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/js/jscore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module times", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
framePtr = F;
F.line = 1371;
F.filename = "times.nim";
if (globalThis.utcInstance_1509951092 === undefined) {
  globalThis.utcInstance_1509951092 = [null];
}
F.line = 1372;
if (globalThis.localInstance_1509951093 === undefined) {
  globalThis.localInstance_1509951093 = [null];
}
framePtr = F.prev;
var F = {procname: "module times", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module handles", prev: framePtr, filename: "/root/wef/handles.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module handles", prev: framePtr, filename: "/root/wef/handles.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function auxWriteStackTrace_33556508(f_33556509) {
  var result_33556510 = [[]];

    var it_33556518 = f_33556509;
    var i_33556519 = 0;
    var total_33556520 = 0;
    var tempFrames_33556521 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555835);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556518 == null)) && (i_33556519 <= 63))) break Label2;
          tempFrames_33556521[i_33556519].Field0 = it_33556518.procname;
          tempFrames_33556521[i_33556519].Field1 = it_33556518.line;
          tempFrames_33556521[i_33556519].Field2 = it_33556518.filename;
          i_33556519 += 1;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556518 == null))) break Label4;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    result_33556510[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556520 == i_33556519))) {
    result_33556510[0].push.apply(result_33556510[0], [40]);;
    result_33556510[0].push.apply(result_33556510[0], HEX24_369098760((total_33556520 - i_33556519)));;
    result_33556510[0].push.apply(result_33556510[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556554 = 0;
      var colontmp__520093991 = 0;
      colontmp__520093991 = (i_33556519 - 1);
      var res_520093993 = colontmp__520093991;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_520093993)) break Label7;
            j_33556554 = res_520093993;
            result_33556510[0].push.apply(result_33556510[0], cstrToNimstr(tempFrames_33556521[j_33556554].Field2));;
            if ((0 < tempFrames_33556521[j_33556554].Field1)) {
            result_33556510[0].push.apply(result_33556510[0], [40]);;
            addInt_301990129(result_33556510, 0, tempFrames_33556521[j_33556554].Field1);
            if (false) {
            result_33556510[0].push.apply(result_33556510[0], [44,32]);;
            addInt_301990129(result_33556510, 0, 0);
            }
            
            result_33556510[0].push.apply(result_33556510[0], [41]);;
            }
            
            result_33556510[0].push.apply(result_33556510[0], [32,97,116,32]);;
            add_33556373(result_33556510, 0, tempFrames_33556521[j_33556554].Field0);
            result_33556510[0].push.apply(result_33556510[0], [10]);;
            res_520093993 -= 1;
          }
      };
    };

  return result_33556510[0];

}

function rawWriteStackTrace_33556604() {
  var result_33556605 = [];

    if (!((framePtr == null))) {
    result_33556605 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10] || []).concat(auxWriteStackTrace_33556508(framePtr) || []), NTI33554449);
    }
    else {
      result_33556605 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556605;

}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 635;
    F.filename = "system.nim";
    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }  framePtr = F.prev;

  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    buf_33556650[0].push.apply(buf_33556650[0], rawWriteStackTrace_33556604());;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    F.line = 44;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      F.line = 46;
      var iHEX60gensym4_301990110 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_520093986 = 0;
      Label3: {
        F.line = 120;
          Label4: while (true) {
          if (!(i_520093986 < n_301990095)) break Label4;
            F.line = 49;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_520093986;
            F.line = 49;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_520093986 = addInt(i_520093986, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "digitsutils.nim";
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));
  framePtr = F.prev;

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 111;
    F.filename = "digitsutils.nim";
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));
  framePtr = F.prev;

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 115;
    F.filename = "digitsutils.nim";
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));
  framePtr = F.prev;

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "dollars.nim";
    addInt_301990129(result_369098762, 0, x_369098761);
  framePtr = F.prev;

  return result_369098762[0];

}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556813) || [],[32,46,46,32] || [],HEX24_369098760(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function HEX24_1509951338(f_1509951339) {
  var result_1509951340 = [];

  var F = {procname: "times.$", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1637;
    F.filename = "times.nim";
    result_1509951340 = nimCopy(null, f_1509951339.formatStr, NTI33554449);
  framePtr = F.prev;

  return result_1509951340;

}

function raiseParseException_1509951341(f_1509951342, input_1509951343, msg_1509951344) {
  var F = {procname: "times.raiseParseException", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1644;
    F.filename = "times.nim";
    raiseException({message: ([70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,39] || []).concat(input_1509951343 || [],[39,32,119,105,116,104,32,102,111,114,109,97,116,32,39] || [],HEX24_1509951338(f_1509951342) || [],[39,46,32] || [],msg_1509951344 || []), parent: null, m_type: NTI1509950459, name: null, trace: [], up: null}, "TimeParseError");
  framePtr = F.prev;

  
}

function HEX2D_1509949470(a_1509949471, b_1509949472) {
  var result_1509949473 = 0;

  var F = {procname: "times.-", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 231;
    F.filename = "times.nim";
    result_1509949473 = (a_1509949471 - b_1509949472);
  framePtr = F.prev;

  return result_1509949473;

}

function HEX2B_1509949462(a_1509949463, b_1509949464) {
  var result_1509949465 = 0;

  var F = {procname: "times.+", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 227;
    F.filename = "times.nim";
    result_1509949465 = (a_1509949463 + b_1509949464);
  framePtr = F.prev;

  return result_1509949465;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function HEX2A_1509949454(a_1509949455, b_1509949456) {
  var result_1509949457 = 0;

  var F = {procname: "times.*", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 223;
    F.filename = "times.nim";
    result_1509949457 = (a_1509949455 * b_1509949456);
  framePtr = F.prev;

  return result_1509949457;

}

function parseInt_1509951382(s_1509951383, b_1509951384, b_1509951384_Idx, start_1509951385, maxLen_1509951390, allowSign_1509951391) {
      var Temporary1;
          var Temporary4;

  var result_1509951392 = 0;

  var F = {procname: "times.parseInt", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1650;
    F.filename = "times.nim";
    var sign_1509951393 = (-1);
    F.line = 1651;
    var i_1509951394 = start_1509951385;
    F.line = 1652;
    var stop_1509951395 = HEX2D_1509949470(HEX2B_1509949462(start_1509951385, nimMin(HEX2B_1509949462(HEX2D_1509949470((s_1509951383).length - 1, start_1509951385), 1), maxLen_1509951390)), 1);
    if ((allowSign_1509951391 && (i_1509951394 <= stop_1509951395))) {
    if ((s_1509951383[chckIndx(i_1509951394, 0, (s_1509951383).length - 1)] == 43)) {
    F.line = 1655;
    i_1509951394 = addInt(i_1509951394, 1);
    }
    else {
    if ((s_1509951383[chckIndx(i_1509951394, 0, (s_1509951383).length - 1)] == 45)) {
    F.line = 1657;
    i_1509951394 = addInt(i_1509951394, 1);
    F.line = 1658;
    sign_1509951393 = 1;
    }
    }
    }
    
      if (!(i_1509951394 <= stop_1509951395)) Temporary1 = false; else {        Temporary1 = (ConstSet2[s_1509951383[chckIndx(i_1509951394, 0, (s_1509951383).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 1660;
    b_1509951384[b_1509951384_Idx] = 0;
    Label2: {
      F.line = 1661;
        Label3: while (true) {
          if (!(i_1509951394 <= stop_1509951395)) Temporary4 = false; else {            Temporary4 = (ConstSet3[s_1509951383[chckIndx(i_1509951394, 0, (s_1509951383).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          F.line = 1662;
          var c_1509951420 = HEX2D_1509949470(s_1509951383[chckIndx(i_1509951394, 0, (s_1509951383).length - 1)], 48);
          if ((divInt(HEX2B_1509949462((-2147483648), c_1509951420), 10) <= b_1509951384[b_1509951384_Idx])) {
          F.line = 1664;
          b_1509951384[b_1509951384_Idx] = HEX2D_1509949470(HEX2A_1509949454(b_1509951384[b_1509951384_Idx], 10), c_1509951420);
          }
          else {
            F.line = 1666;
            result_1509951392 = 0;
            break BeforeRet;
          }
          
          F.line = 1667;
          i_1509951394 = addInt(i_1509951394, 1);
        }
    };
    if (((sign_1509951393 == (-1)) && (b_1509951384[b_1509951384_Idx] == (-2147483648)))) {
    F.line = 1669;
    result_1509951392 = 0;
    break BeforeRet;
    }
    
    F.line = 1670;
    b_1509951384[b_1509951384_Idx] = HEX2A_1509949454(b_1509951384[b_1509951384_Idx], sign_1509951393);
    F.line = 1671;
    result_1509951392 = HEX2D_1509949470(i_1509951394, start_1509951385);
    }
    
  };
  framePtr = F.prev;

  return result_1509951392;

}

function HEX2EHEX2E_788529202(a_788529205, b_788529206) {
  var result_788529207 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "system.nim";
    result_788529207 = nimCopy(result_788529207, {a: a_788529205, b: b_788529206}, NTI788529176);
  framePtr = F.prev;

  return result_788529207;

}

function inc_1509949474(a_1509949475, a_1509949475_Idx, b_1509949476) {
  var F = {procname: "times.inc", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 233;
    F.filename = "times.nim";
    a_1509949475[a_1509949475_Idx] += b_1509949476;
  framePtr = F.prev;

  
}

function some_1509951745(val_1509951747) {
  var result_1509951748 = ({val: 0, has: false});

  var F = {procname: "some.some", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "options.nim";
    result_1509951748.has = true;
    F.line = 141;
    result_1509951748.val = val_1509951747;
  framePtr = F.prev;

  return result_1509951748;

}

function contains_1509951789(s_1509951793, value_1509951794) {
  var result_1509951795 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 756;
    F.filename = "system.nim";
    result_1509951795 = ((s_1509951793.a <= value_1509951794) && (value_1509951794 <= s_1509951793.b));
  framePtr = F.prev;

  return result_1509951795;

}

function HEX2EHEX2E_1509951760(a_1509951763, b_1509951764) {
  var result_1509951767 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "system.nim";
    result_1509951767 = nimCopy(result_1509951767, {a: nimCopy(null, a_1509951763, NTI1509949464), b: nimCopy(null, b_1509951764, NTI1509949464)}, NTI1509950803);
  framePtr = F.prev;

  return result_1509951767;

}

function toLowerAscii_989855745(c_989855746) {
  var result_989855747 = 0;

  var F = {procname: "strimpl.toLowerAscii", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/private/strimpl.nim", line: 0};
  framePtr = F;
    if ((ConstSet4[c_989855746] != undefined)) {
    F.line = 3;
    F.filename = "strimpl.nim";
    result_989855747 = chckRange(addInt(c_989855746, 32), 0, 255);
    }
    else {
      F.line = 5;
      result_989855747 = c_989855746;
    }
    
  framePtr = F.prev;

  return result_989855747;

}

function nsuCmpIgnoreCase(a_822083771, b_822083772) {
  var result_822083773 = 0;

  var F = {procname: "strutils.cmpIgnoreCase", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 42;
    F.filename = "strimpl.nim";
    var aLenHEX60gensym20_822083780 = (a_822083771).length;
    F.line = 43;
    var bLenHEX60gensym20_822083781 = (b_822083772).length;
    F.line = 44;
    var iHEX60gensym20_822083782 = 0;
    F.line = 48;
    var mHEX60gensym20_822083783 = nimMin(aLenHEX60gensym20_822083780, bLenHEX60gensym20_822083781);
    Label1: {
      F.line = 49;
        Label2: while (true) {
        if (!(iHEX60gensym20_822083782 < mHEX60gensym20_822083783)) break Label2;
          F.line = 50;
          result_822083773 = subInt(toLowerAscii_989855745(a_822083771[chckIndx(iHEX60gensym20_822083782, 0, (a_822083771).length - 1)]), toLowerAscii_989855745(b_822083772[chckIndx(iHEX60gensym20_822083782, 0, (b_822083772).length - 1)]));
          if (!((result_822083773 == 0))) {
          F.line = 51;
          break BeforeRet;
          }
          
          F.line = 52;
          iHEX60gensym20_822083782 = addInt(iHEX60gensym20_822083782, 1);
        }
    };
    F.line = 53;
    result_822083773 = subInt(aLenHEX60gensym20_822083780, bLenHEX60gensym20_822083781);
  };
  framePtr = F.prev;

  return result_822083773;

}

function substr_33558079(s_33558080, first_33558081, last_33558082) {
  var result_33558083 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2658;
    F.filename = "system.nim";
    var first_33558084 = nimMax(first_33558081, 0);
    F.line = 2659;
    var L_33558085 = nimMax(addInt(subInt(nimMin(last_33558082, (s_33558080).length - 1), first_33558084), 1), 0);
    F.line = 2660;
    result_33558083 = nimCopy(null, mnewString(chckRange(L_33558085, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 2661;
      var i_33558090 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__520094014 = 0;
      F.line = 2661;
      F.filename = "system.nim";
      colontmp__520094014 = subInt(L_33558085, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_520094015 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_520094015 <= colontmp__520094014)) break Label3;
            F.line = 2661;
            F.filename = "system.nim";
            i_33558090 = res_520094015;
            F.line = 2661;
            result_33558083[chckIndx(i_33558090, 0, (result_33558083).length - 1)] = s_33558080[chckIndx(addInt(i_33558090, first_33558084), 0, (s_33558080).length - 1)];
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_520094015 = addInt(res_520094015, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_33558083;

}

function some_1509951883(val_1509951885) {
  var result_1509951886 = ({val: 0, has: false});

  var F = {procname: "some.some", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "options.nim";
    result_1509951886.has = true;
    F.line = 141;
    result_1509951886.val = val_1509951885;
  framePtr = F.prev;

  return result_1509951886;

}

function HEX2B_1509949458(a_1509949459, b_1509949460) {
  var result_1509949461 = 0n;

  var F = {procname: "times.+", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 225;
    F.filename = "times.nim";
    result_1509949461 = (a_1509949459 + b_1509949460);
  framePtr = F.prev;

  return result_1509949461;

}

function HEX2A_1509949450(a_1509949451, b_1509949452) {
  var result_1509949453 = 0n;

  var F = {procname: "times.*", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 221;
    F.filename = "times.nim";
    result_1509949453 = (a_1509949451 * b_1509949452);
  framePtr = F.prev;

  return result_1509949453;

}

function convert_1509949942(unitFrom_1509949944, unitTo_1509949945, quantity_1509949946) {
    var Temporary1;

  var result_1509949947 = 0n;

  var F = {procname: "convert.convert", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 435;
    F.filename = "times.nim";
    if ((unitFrom_1509949944 < unitTo_1509949945)) {
    Temporary1 = divInt64(quantity_1509949946, divInt64(unitWeights_1509949590[chckIndx(unitTo_1509949945, 0, (unitWeights_1509949590).length - 1)], unitWeights_1509949590[chckIndx(unitFrom_1509949944, 0, (unitWeights_1509949590).length - 1)]));
    }
    else {
    Temporary1 = HEX2A_1509949450(divInt64(unitWeights_1509949590[chckIndx(unitFrom_1509949944, 0, (unitWeights_1509949590).length - 1)], unitWeights_1509949590[chckIndx(unitTo_1509949945, 0, (unitWeights_1509949590).length - 1)]), quantity_1509949946);
    }
    
    result_1509949947 = Temporary1;
  framePtr = F.prev;

  return result_1509949947;

}

function convert_1509950009(unitFrom_1509950011, unitTo_1509950012, quantity_1509950013) {
    var Temporary1;

  var result_1509950014 = 0;

  var F = {procname: "convert.convert", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 435;
    F.filename = "times.nim";
    if ((unitFrom_1509950011 < unitTo_1509950012)) {
    Temporary1 = chckRange(Number(divInt64(BigInt(quantity_1509950013), divInt64(unitWeights_1509949590[chckIndx(unitTo_1509950012, 0, (unitWeights_1509949590).length - 1)], unitWeights_1509949590[chckIndx(unitFrom_1509950011, 0, (unitWeights_1509949590).length - 1)]))), (-2147483648), 2147483647);
    }
    else {
    Temporary1 = chckRange(Number(HEX2A_1509949450(divInt64(unitWeights_1509949590[chckIndx(unitFrom_1509950011, 0, (unitWeights_1509949590).length - 1)], unitWeights_1509949590[chckIndx(unitTo_1509950012, 0, (unitWeights_1509949590).length - 1)]), BigInt(quantity_1509950013))), (-2147483648), 2147483647);
    }
    
    result_1509950014 = Temporary1;
  framePtr = F.prev;

  return result_1509950014;

}

function checkOverflowInt64(a_33557070) {
        if (a_33557070 > 9223372036854775807n || a_33557070 < -9223372036854775808n) raiseOverflow();
  

  
}

function normalize_1509950657(seconds_1509950659, nanoseconds_1509950660) {
  var result_1509950661 = ({seconds: 0n, nanosecond: 0});

  var F = {procname: "normalize.normalize", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 450;
    F.filename = "times.nim";
    result_1509950661.seconds = HEX2B_1509949458(seconds_1509950659, convert_1509949942(0, 3, nanoseconds_1509950660));
    F.line = 451;
    var nanosecond_1509950672 = modInt64(nanoseconds_1509950660, BigInt(convert_1509950009(3, 0, 1)));
    if ((nanosecond_1509950672 < 0n)) {
    F.line = 453;
    nanosecond_1509950672 = addInt64(nanosecond_1509950672, BigInt(BigInt(convert_1509950009(3, 0, 1))));
    F.line = 454;
    result_1509950661.seconds = subInt64(result_1509950661.seconds, BigInt(1));
    }
    
    F.line = 455;
    result_1509950661.nanosecond = chckRange(chckRange(Number(nanosecond_1509950672), (-2147483648), 2147483647), 0, 999999999);
  framePtr = F.prev;

  return result_1509950661;

}

function HEX2D_1509949466(a_1509949467, b_1509949468) {
  var result_1509949469 = 0n;

  var F = {procname: "times.-", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 229;
    F.filename = "times.nim";
    result_1509949469 = (a_1509949467 - b_1509949468);
  framePtr = F.prev;

  return result_1509949469;

}

function ntSubTime(a_1509950687, b_1509950688) {
  var result_1509950689 = ({seconds: 0n, nanosecond: 0});

  var F = {procname: "times.-", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1014;
    F.filename = "times.nim";
    result_1509950689 = nimCopy(result_1509950689, normalize_1509950657(HEX2D_1509949466(a_1509950687.seconds, b_1509950688.seconds), BigInt(HEX2D_1509949470(a_1509950687.nanosecond, b_1509950688.nanosecond))), NTI1509949472);
  framePtr = F.prev;

  return result_1509950689;

}

function normalize_1509949999(seconds_1509950001, nanoseconds_1509950002) {
  var result_1509950003 = ({seconds: 0n, nanosecond: 0});

  var F = {procname: "normalize.normalize", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 450;
    F.filename = "times.nim";
    result_1509950003.seconds = HEX2B_1509949458(seconds_1509950001, convert_1509949942(0, 3, nanoseconds_1509950002));
    F.line = 451;
    var nanosecond_1509950019 = modInt64(nanoseconds_1509950002, BigInt(convert_1509950009(3, 0, 1)));
    if ((nanosecond_1509950019 < 0n)) {
    F.line = 453;
    nanosecond_1509950019 = addInt64(nanosecond_1509950019, BigInt(BigInt(convert_1509950009(3, 0, 1))));
    F.line = 454;
    result_1509950003.seconds = subInt64(result_1509950003.seconds, BigInt(1));
    }
    
    F.line = 455;
    result_1509950003.nanosecond = chckRange(chckRange(Number(nanosecond_1509950019), (-2147483648), 2147483647), 0, 999999999);
  framePtr = F.prev;

  return result_1509950003;

}

function initDuration_1509949932(nanoseconds_1509949933, microseconds_1509949934, milliseconds_1509949935, seconds_1509949936, minutes_1509949937, hours_1509949938, days_1509949939, weeks_1509949940) {
  var result_1509949941 = ({seconds: 0n, nanosecond: 0});

  var F = {procname: "times.initDuration", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 669;
    F.filename = "times.nim";
    var seconds_1509949987 = HEX2B_1509949458(HEX2B_1509949458(HEX2B_1509949458(HEX2B_1509949458(HEX2B_1509949458(HEX2B_1509949458(HEX2B_1509949458(convert_1509949942(7, 3, weeks_1509949940), convert_1509949942(6, 3, days_1509949939)), convert_1509949942(4, 3, minutes_1509949937)), convert_1509949942(5, 3, hours_1509949938)), convert_1509949942(3, 3, seconds_1509949936)), convert_1509949942(2, 3, milliseconds_1509949935)), convert_1509949942(1, 3, microseconds_1509949934)), convert_1509949942(0, 3, nanoseconds_1509949933));
    F.line = 677;
    var nanoseconds_1509949998 = chckRange(Number(HEX2B_1509949458(HEX2B_1509949458(convert_1509949942(2, 0, modInt64(milliseconds_1509949935, 1000n)), convert_1509949942(1, 0, modInt64(microseconds_1509949934, 1000000n))), modInt64(nanoseconds_1509949933, 1000000000n))), (-2147483648), 2147483647);
    F.line = 681;
    result_1509949941 = nimCopy(result_1509949941, normalize_1509949999(seconds_1509949987, BigInt(nanoseconds_1509949998)), NTI1509949474);
  framePtr = F.prev;

  return result_1509949941;

}

function floorDiv_1509949763(x_1509949765, y_1509949766) {
  var result_1509949767 = 0n;

    result_1509949767 = x_1509949765 / y_1509949766;
    var r_1509949768 = x_1509949765 % y_1509949766;
    if ((((0n < r_1509949768) && (y_1509949766 < 0n)) || ((r_1509949768 < 0n) && (0n < y_1509949766)))) {
    result_1509949767 = BigInt.asIntN(64, result_1509949767 - BigInt(1));
    }
    

  return result_1509949767;

}

function inc_1509949482(a_1509949483, a_1509949483_Idx, b_1509949484) {
  var F = {procname: "times.inc", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 235;
    F.filename = "times.nim";
    a_1509949483[a_1509949483_Idx] = BigInt.asIntN(64, a_1509949483[a_1509949483_Idx] + BigInt(b_1509949484));
  framePtr = F.prev;

  
}

function fromEpochDay_1509949666(epochday_1509949667) {
    var Temporary1;
    var Temporary2;

  var result_1509949671 = {Field0: 0, Field1: 0, Field2: 0};

  var F = {procname: "times.fromEpochDay", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 503;
    F.filename = "times.nim";
    var z_1509949672 = [epochday_1509949667];
    F.line = 504;
    inc_1509949482(z_1509949672, 0, 719468);
    F.line = 505;
    if ((0n <= z_1509949672[0])) {
    Temporary1 = z_1509949672[0];
    }
    else {
    Temporary1 = HEX2D_1509949466(z_1509949672[0], 146096n);
    }
    
    var era_1509949673 = divInt64(Temporary1, 146097n);
    F.line = 506;
    var doe_1509949674 = HEX2D_1509949466(z_1509949672[0], HEX2A_1509949450(era_1509949673, 146097n));
    F.line = 507;
    var yoe_1509949675 = divInt64(HEX2D_1509949466(HEX2B_1509949458(HEX2D_1509949466(doe_1509949674, divInt64(doe_1509949674, 1460n)), divInt64(doe_1509949674, 36524n)), divInt64(doe_1509949674, 146096n)), 365n);
    F.line = 508;
    var y_1509949676 = HEX2B_1509949458(yoe_1509949675, HEX2A_1509949450(era_1509949673, 400n));
    F.line = 509;
    var doy_1509949677 = HEX2D_1509949466(doe_1509949674, HEX2D_1509949466(HEX2B_1509949458(HEX2A_1509949450(365n, yoe_1509949675), divInt64(yoe_1509949675, 4n)), divInt64(yoe_1509949675, 100n)));
    F.line = 510;
    var mp_1509949678 = divInt64(HEX2B_1509949458(HEX2A_1509949450(5n, doy_1509949677), 2n), 153n);
    F.line = 511;
    var d_1509949679 = HEX2B_1509949458(HEX2D_1509949466(doy_1509949677, divInt64(HEX2B_1509949458(HEX2A_1509949450(153n, mp_1509949678), 2n), 5n)), 1n);
    F.line = 512;
    if ((mp_1509949678 < 10n)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = (-9);
    }
    
    var m_1509949680 = HEX2B_1509949458(mp_1509949678, BigInt(Temporary2));
    F.line = 513;
    var colontmp__520094017 = chckRange(Number(d_1509949679), 1, 31);
    F.line = 513;
    var colontmp__520094018 = chckRange(Number(m_1509949680), 1, 12);
    F.line = 513;
    var colontmp__520094019 = chckRange(Number(HEX2B_1509949458(y_1509949676, BigInt(((m_1509949680 <= 2n) ? 1 : 0)))), (-2147483648), 2147483647);
    F.line = 513;
    result_1509949671 = nimCopy(result_1509949671, {Field0: nimCopy(null, colontmp__520094017, NTI1509949464), Field1: colontmp__520094018, Field2: colontmp__520094019}, NTI1509949633);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1509949671;

}

function isLeapYear_1509949610(year_1509949611) {
  var result_1509949612 = false;

  var F = {procname: "times.isLeapYear", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 458;
    F.filename = "times.nim";
    result_1509949612 = ((modInt(year_1509949611, 4) == 0) && (!((modInt(year_1509949611, 100) == 0)) || (modInt(year_1509949611, 400) == 0)));
  framePtr = F.prev;

  return result_1509949612;

}

function getDaysInMonth_1509949613(month_1509949614, year_1509949615) {
      var Temporary1;

  var result_1509949616 = 0;

  var F = {procname: "times.getDaysInMonth", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 470;
    F.filename = "times.nim";
    switch (month_1509949614) {
    case 2:
      F.line = 471;
      if (isLeapYear_1509949610(year_1509949615)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_1509949616 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      F.line = 472;
      result_1509949616 = 30;
      break;
    default: 
      F.line = 473;
      result_1509949616 = 31;
      break;
    }
  framePtr = F.prev;

  return result_1509949616;

}

function sysFatal_268435501(message_268435504) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_268435499(msg_268435500) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal_268435501(msg_268435500);
  framePtr = F.prev;

  
}

function failedAssertImpl_268435541(msg_268435542) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert_268435499(msg_268435542);
  framePtr = F.prev;

  
}

function nsuIntToStr(x_822084432, minchars_822084433) {
  var result_822084434 = [];

  var F = {procname: "strutils.intToStr", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1122;
    F.filename = "strutils.nim";
    result_822084434 = nimCopy(null, HEX24_369098760(absInt(x_822084432)), NTI33554449);
    Label1: {
      F.line = 1123;
      var i_822084439 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__520094021 = 0;
      F.line = 1123;
      F.filename = "strutils.nim";
      colontmp__520094021 = subInt(minchars_822084433, (result_822084434).length);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_520094022 = 1;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_520094022 <= colontmp__520094021)) break Label3;
            F.line = 1123;
            F.filename = "strutils.nim";
            i_822084439 = res_520094022;
            F.line = 1123;
            result_822084434 = nimCopy(null, [48].concat(result_822084434 || []), NTI33554449);
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_520094022 = addInt(res_520094022, 1);
          }
      };
    };
    if ((x_822084432 < 0)) {
    F.line = 1126;
    F.filename = "strutils.nim";
    result_822084434 = nimCopy(null, [45].concat(result_822084434 || []), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_822084434;

}

function assertValidDate_1509949617(monthday_1509949618, month_1509949619, year_1509949620) {
  var F = {procname: "times.assertValidDate", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    if (!((monthday_1509949618 <= getDaysInMonth_1509949613(month_1509949619, year_1509949620)))) {
    F.line = 477;
    F.filename = "times.nim";
    failedAssertImpl_268435541((makeNimstrLit("/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim(477, 3) `monthday <= getDaysInMonth(month, year)` ") || []).concat(HEX24_369098760(year_1509949620) || [],[45] || [],nsuIntToStr(month_1509949619, 2) || [],[45] || [],HEX24_369098760(monthday_1509949618) || [],[32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,100,97,116,101] || []));
    }
    
  framePtr = F.prev;

  
}

function toEpochDay_1509949646(monthday_1509949647, month_1509949648, year_1509949649) {
    var Temporary1;
    var Temporary2;

  var result_1509949650 = 0n;

  var F = {procname: "times.toEpochDay", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 486;
    F.filename = "times.nim";
    assertValidDate_1509949617(monthday_1509949647, month_1509949648, year_1509949649);
    F.line = 487;
    var y_1509949654 = year_1509949649;
    F.line = 487;
    var m_1509949655 = month_1509949648;
    F.line = 487;
    var d_1509949656 = monthday_1509949647;
    if ((m_1509949655 <= 2)) {
    F.line = 489;
    y_1509949654 = subInt(y_1509949654, 1);
    }
    
    F.line = 491;
    if ((0 <= y_1509949654)) {
    Temporary1 = y_1509949654;
    }
    else {
    Temporary1 = HEX2D_1509949470(y_1509949654, 399);
    }
    
    var era_1509949662 = divInt(Temporary1, 400);
    F.line = 492;
    var yoe_1509949663 = HEX2D_1509949470(y_1509949654, HEX2A_1509949454(era_1509949662, 400));
    F.line = 493;
    if ((2 < m_1509949655)) {
    Temporary2 = (-3);
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_1509949664 = HEX2D_1509949470(HEX2B_1509949462(divInt(HEX2B_1509949462(HEX2A_1509949454(153, HEX2B_1509949462(m_1509949655, Temporary2)), 2), 5), d_1509949656), 1);
    F.line = 494;
    var doe_1509949665 = HEX2B_1509949462(HEX2D_1509949470(HEX2B_1509949462(HEX2A_1509949454(yoe_1509949663, 365), divInt(yoe_1509949663, 4)), divInt(yoe_1509949663, 100)), doy_1509949664);
    F.line = 495;
    result_1509949650 = BigInt(HEX2D_1509949470(HEX2B_1509949462(HEX2A_1509949454(era_1509949662, 146097), doe_1509949665), 719468));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1509949650;

}

function getDayOfWeek_1509949757(monthday_1509949758, month_1509949759, year_1509949760) {
    var Temporary1;

  var result_1509949761 = 0;

  var F = {procname: "times.getDayOfWeek", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 543;
    F.filename = "times.nim";
    assertValidDate_1509949617(monthday_1509949758, month_1509949759, year_1509949760);
    F.line = 545;
    var days_1509949762 = HEX2D_1509949466(toEpochDay_1509949646(monthday_1509949758, month_1509949759, year_1509949760), 3n);
    F.line = 546;
    var weeks_1509949774 = floorDiv_1509949763(days_1509949762, 7n);
    F.line = 547;
    var wd_1509949775 = HEX2D_1509949466(days_1509949762, HEX2A_1509949450(weeks_1509949774, 7n));
    F.line = 550;
    if ((wd_1509949775 == 0n)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = chckRange(Number(HEX2D_1509949466(wd_1509949775, 1n)), 0, 6);
    }
    
    result_1509949761 = Temporary1;
  framePtr = F.prev;

  return result_1509949761;

}

function getDayOfYear_1509949718(monthday_1509949719, month_1509949720, year_1509949721) {
  var result_1509949722 = 0;

  var F = {procname: "times.getDayOfYear", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 524;
    F.filename = "times.nim";
    assertValidDate_1509949617(monthday_1509949719, month_1509949720, year_1509949721);
    if (isLeapYear_1509949610(year_1509949721)) {
    F.line = 531;
    result_1509949722 = chckRange(HEX2D_1509949470(HEX2B_1509949462(daysUntilMonthLeap_1509949724[chckIndx(month_1509949720, 1, (daysUntilMonthLeap_1509949724).length + (1) - 1) - (1)], monthday_1509949719), 1), 0, 365);
    }
    else {
      F.line = 533;
      result_1509949722 = chckRange(HEX2D_1509949470(HEX2B_1509949462(daysUntilMonth_1509949723[chckIndx(month_1509949720, 1, (daysUntilMonth_1509949723).length + (1) - 1) - (1)], monthday_1509949719), 1), 0, 365);
    }
    
  framePtr = F.prev;

  return result_1509949722;

}

function initDateTime_1509950909(zt_1509950910, zone_1509950911) {
  var result_1509950912 = ({m_type: NTI1509949473, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

  var F = {procname: "times.initDateTime", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1166;
    F.filename = "times.nim";
    F.line = 1167;
    var adjTime_1509950913 = ntSubTime(zt_1509950910.time, initDuration_1509949932(0n, 0n, 0n, BigInt(zt_1509950910.utcOffset), 0n, 0n, 0n, 0n));
    F.line = 1168;
    var s_1509950914 = adjTime_1509950913.seconds;
    F.line = 1169;
    var epochday_1509950919 = floorDiv_1509949763(s_1509950914, 86400n);
    F.line = 1170;
    var rem_1509950920 = HEX2D_1509949466(s_1509950914, HEX2A_1509949450(epochday_1509950919, 86400n));
    F.line = 1171;
    var hour_1509950921 = divInt64(rem_1509950920, 3600n);
    F.line = 1172;
    rem_1509950920 = HEX2D_1509949466(rem_1509950920, HEX2A_1509949450(hour_1509950921, 3600n));
    F.line = 1173;
    var minute_1509950922 = divInt64(rem_1509950920, 60n);
    F.line = 1174;
    rem_1509950920 = HEX2D_1509949466(rem_1509950920, HEX2A_1509949450(minute_1509950922, 60n));
    F.line = 1175;
    var second_1509950923 = rem_1509950920;
    F.line = 1177;
    var tmpTuple_1509950924 = fromEpochDay_1509949666(epochday_1509950919);
    F.line = 1177;
    var d_1509950925 = tmpTuple_1509950924["Field0"];
    F.line = 1177;
    var m_1509950926 = tmpTuple_1509950924["Field1"];
    F.line = 1177;
    var y_1509950927 = tmpTuple_1509950924["Field2"];
    result_1509950912 = nimCopy(result_1509950912, {year: y_1509950927, monthZero: ((m_1509950926) | 0), monthdayZero: d_1509950925, hour: nimCopy(null, chckRange(Number(hour_1509950921), 0, 23), NTI1509949465), minute: nimCopy(null, chckRange(Number(minute_1509950922), 0, 59), NTI1509949466), second: nimCopy(null, chckRange(Number(second_1509950923), 0, 60), NTI1509949467), nanosecond: nimCopy(null, zt_1509950910.time.nanosecond, NTI1509949469), weekday: getDayOfWeek_1509949757(d_1509950925, m_1509950926, y_1509950927), yearday: getDayOfYear_1509949718(d_1509950925, m_1509950926, y_1509950927), isDst: zt_1509950910.isDst, timezone: zone_1509950911, utcOffset: zt_1509950910.utcOffset, m_type: NTI1509949473}, NTI1509949473);
  framePtr = F.prev;

  return result_1509950912;

}

function zonedTimeFromTime_1509950998(zone_1509950999, time_1509951000) {
  var result_1509951001 = ({time: ({seconds: 0n, nanosecond: 0}), utcOffset: 0, isDst: false});

  var F = {procname: "times.zonedTimeFromTime", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1235;
    F.filename = "times.nim";
    result_1509951001 = nimCopy(result_1509951001, zone_1509950999.zonedTimeFromTimeImpl(time_1509951000), NTI1509949479);
  framePtr = F.prev;

  return result_1509951001;

}

function inZone_1509951048(time_1509951049, zone_1509951050) {
  var result_1509951051 = ({m_type: NTI1509949473, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

  var F = {procname: "times.inZone", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1264;
    F.filename = "times.nim";
    result_1509951051 = nimCopy(result_1509951051, initDateTime_1509950909(zonedTimeFromTime_1509950998(zone_1509951050, time_1509951049), zone_1509951050), NTI1509949473);
  framePtr = F.prev;

  return result_1509951051;

}

function newTimezone_1509950955(name_1509950956, zonedTimeFromTimeImpl_1509950959, zonedTimeFromAdjTimeImpl_1509950962) {
  var result_1509950963 = null;

  var F = {procname: "times.newTimezone", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1201;
    F.filename = "times.nim";
    result_1509950963 = {name: nimCopy(null, name_1509950956, NTI33554449), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_1509950959, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_1509950962};
  framePtr = F.prev;

  return result_1509950963;

}

function localZonedTimeFromTime_1509951066(time_1509951067) {
  var result_1509951068 = ({time: ({seconds: 0n, nanosecond: 0}), utcOffset: 0, isDst: false});

  var F = {procname: "times.localZonedTimeFromTime", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1283;
    F.filename = "times.nim";
    var jsDate_1509951069 = new Date(Number(HEX2A_1509949450(time_1509951067.seconds, 1000n)));
    F.line = 1284;
    var offset_1509951070 = HEX2A_1509949454(jsDate_1509951069.getTimezoneOffset(), 60);
    F.line = 1285;
    result_1509951068.time = nimCopy(result_1509951068.time, time_1509951067, NTI1509949472);
    F.line = 1286;
    result_1509951068.utcOffset = offset_1509951070;
    F.line = 1287;
    result_1509951068.isDst = false;
  framePtr = F.prev;

  return result_1509951068;

}

function contains_1006637691(s_1006637695, value_1006637696) {
  var result_1006637697 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 756;
    F.filename = "system.nim";
    result_1006637697 = ((s_1006637695.a <= value_1006637696) && (value_1006637696 <= s_1006637695.b));
  framePtr = F.prev;

  return result_1006637697;

}

function ntAddTime(a_1509950651, b_1509950652) {
  var result_1509950653 = ({seconds: 0n, nanosecond: 0});

  var F = {procname: "times.+", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1008;
    F.filename = "times.nim";
    result_1509950653 = nimCopy(result_1509950653, normalize_1509950657(HEX2B_1509949458(a_1509950651.seconds, b_1509950652.seconds), BigInt(HEX2B_1509949462(a_1509950651.nanosecond, b_1509950652.nanosecond))), NTI1509949472);
  framePtr = F.prev;

  return result_1509950653;

}

function localZonedTimeFromAdjTime_1509951071(adjTime_1509951072) {
  var result_1509951073 = ({time: ({seconds: 0n, nanosecond: 0}), utcOffset: 0, isDst: false});

  var F = {procname: "times.localZonedTimeFromAdjTime", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1290;
    F.filename = "times.nim";
    var utcDate_1509951074 = new Date(Number(HEX2A_1509949450(adjTime_1509951072.seconds, 1000n)));
    F.line = 1291;
    var localDate_1509951075 = new Date(utcDate_1509951074.getUTCFullYear(),utcDate_1509951074.getUTCMonth(),utcDate_1509951074.getUTCDate(),utcDate_1509951074.getUTCHours(),utcDate_1509951074.getUTCMinutes(),utcDate_1509951074.getUTCSeconds(),0);
    if (contains_1006637691(HEX2EHEX2E_788529202(0, 99), utcDate_1509951074.getUTCFullYear())) {
    F.line = 1300;
    localDate_1509951075.setFullYear(utcDate_1509951074.getUTCFullYear());
    }
    
    F.line = 1302;
    result_1509951073.utcOffset = HEX2A_1509949454(localDate_1509951075.getTimezoneOffset(), 60);
    F.line = 1303;
    result_1509951073.time = nimCopy(result_1509951073.time, ntAddTime(adjTime_1509951072, initDuration_1509949932(0n, 0n, 0n, BigInt(result_1509951073.utcOffset), 0n, 0n, 0n, 0n)), NTI1509949472);
    F.line = 1304;
    result_1509951073.isDst = false;
  framePtr = F.prev;

  return result_1509951073;

}

function local_1509951115() {
  var result_1509951116 = null;

  var F = {procname: "times.local", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    if ((localInstance_1509951093[0] == null)) {
    F.line = 1389;
    F.filename = "times.nim";
    localInstance_1509951093[0] = newTimezone_1509950955([76,79,67,65,76], localZonedTimeFromTime_1509951066, localZonedTimeFromAdjTime_1509951071);
    }
    
    F.line = 1391;
    result_1509951116 = localInstance_1509951093[0];
  framePtr = F.prev;

  return result_1509951116;

}

function local_1509951129(t_1509951130) {
  var result_1509951131 = ({m_type: NTI1509949473, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

  var F = {procname: "times.local", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1406;
    F.filename = "times.nim";
    result_1509951131 = nimCopy(result_1509951131, inZone_1509951048(t_1509951130, local_1509951115()), NTI1509949473);
  framePtr = F.prev;

  return result_1509951131;

}

function initTime_1509950521(unix_1509950522, nanosecond_1509950523) {
  var result_1509950524 = ({seconds: 0n, nanosecond: 0});

  var F = {procname: "times.initTime", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 913;
    F.filename = "times.nim";
    result_1509950524.seconds = unix_1509950522;
    F.line = 914;
    result_1509950524.nanosecond = nanosecond_1509950523;
  framePtr = F.prev;

  return result_1509950524;

}

function getTime_1509950599() {
  var result_1509950600 = ({seconds: 0n, nanosecond: 0});

  var F = {procname: "times.getTime", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 981;
    F.filename = "times.nim";
    var millis_1509950605 = new Date().getTime();
    F.line = 982;
    var seconds_1509950611 = convert_1509950009(2, 3, millis_1509950605);
    F.line = 983;
    var nanos_1509950622 = convert_1509950009(2, 0, modInt(millis_1509950605, convert_1509950009(3, 2, 1)));
    F.line = 985;
    result_1509950600 = nimCopy(result_1509950600, initTime_1509950521(BigInt(seconds_1509950611), chckRange(nanos_1509950622, 0, 999999999)), NTI1509949472);
  framePtr = F.prev;

  return result_1509950600;

}

function now_1509951132() {
  var result_1509951133 = ({m_type: NTI1509949473, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

  var F = {procname: "times.now", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1410;
    F.filename = "times.nim";
    result_1509951133 = nimCopy(result_1509951133, local_1509951129(getTime_1509950599()), NTI1509949473);
  framePtr = F.prev;

  return result_1509951133;

}

function contains_1509951978(s_1509951982, value_1509951983) {
  var result_1509951984 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 756;
    F.filename = "system.nim";
    result_1509951984 = ((s_1509951982.a <= value_1509951983) && (value_1509951983 <= s_1509951982.b));
  framePtr = F.prev;

  return result_1509951984;

}

function HEX2EHEX2E_1509951949(a_1509951952, b_1509951953) {
  var result_1509951956 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "system.nim";
    result_1509951956 = nimCopy(result_1509951956, {a: nimCopy(null, a_1509951952, NTI1509949465), b: nimCopy(null, b_1509951953, NTI1509949465)}, NTI1509950929);
  framePtr = F.prev;

  return result_1509951956;

}

function contains_1509952065(s_1509952069, value_1509952070) {
  var result_1509952071 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 756;
    F.filename = "system.nim";
    result_1509952071 = ((s_1509952069.a <= value_1509952070) && (value_1509952070 <= s_1509952069.b));
  framePtr = F.prev;

  return result_1509952071;

}

function HEX2EHEX2E_1509952036(a_1509952039, b_1509952040) {
  var result_1509952043 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "system.nim";
    result_1509952043 = nimCopy(result_1509952043, {a: nimCopy(null, a_1509952039, NTI1509949466), b: nimCopy(null, b_1509952040, NTI1509949466)}, NTI1509950987);
  framePtr = F.prev;

  return result_1509952043;

}

function HEX2AHEX3D_1509952260(x_1509952262, x_1509952262_Idx, y_1509952263) {
  var F = {procname: "*=.*=", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system/arithmetics.nim", line: 0};
  framePtr = F;
    F.line = 310;
    F.filename = "arithmetics.nim";
    x_1509952262[x_1509952262_Idx] = HEX2A_1509949454(x_1509952262[x_1509952262_Idx], y_1509952263);
  framePtr = F.prev;

  
}

function HEX5E_1509952253(x_1509952255, y_1509952256) {
  var result_1509952257 = [0];

  var F = {procname: "^.^", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/math.nim", line: 0};
  framePtr = F;
    F.line = 1198;
    F.filename = "math.nim";
    switch (y_1509952256) {
    case 0:
      F.line = 1199;
      result_1509952257[0] = 1;
      break;
    case 1:
      F.line = 1200;
      result_1509952257[0] = x_1509952255;
      break;
    case 2:
      F.line = 1201;
      result_1509952257[0] = HEX2A_1509949454(x_1509952255, x_1509952255);
      break;
    case 3:
      F.line = 1202;
      result_1509952257[0] = HEX2A_1509949454(HEX2A_1509949454(x_1509952255, x_1509952255), x_1509952255);
      break;
    default: 
      F.line = 1204;
      var x_1509952258 = [x_1509952255];
      F.line = 1204;
      var y_1509952259 = y_1509952256;
      F.line = 1205;
      result_1509952257[0] = 1;
      Label1: {
        F.line = 1206;
          Label2: while (true) {
          if (!true) break Label2;
            if (!(((y_1509952259 & 1) == 0))) {
            F.line = 1208;
            HEX2AHEX3D_1509952260(result_1509952257, 0, x_1509952258[0]);
            }
            
            F.line = 1209;
            y_1509952259 = chckRange((y_1509952259 >> 1), 0, 2147483647);
            if ((y_1509952259 == 0)) {
            F.line = 1211;
            break Label1;
            }
            
            F.line = 1212;
            HEX2AHEX3D_1509952260(x_1509952258, 0, x_1509952258[0]);
          }
      };
      break;
    }
  framePtr = F.prev;

  return result_1509952257[0];

}

function contains_1509952311(s_1509952315, value_1509952316) {
  var result_1509952317 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 756;
    F.filename = "system.nim";
    result_1509952317 = ((s_1509952315.a <= value_1509952316) && (value_1509952316 <= s_1509952315.b));
  framePtr = F.prev;

  return result_1509952317;

}

function HEX2EHEX2E_1509952282(a_1509952285, b_1509952286) {
  var result_1509952289 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "system.nim";
    result_1509952289 = nimCopy(result_1509952289, {a: nimCopy(null, a_1509952285, NTI1509949469), b: nimCopy(null, b_1509952286, NTI1509949469)}, NTI1509951153);
  framePtr = F.prev;

  return result_1509952289;

}

function contains_1509952477(s_1509952481, value_1509952482) {
  var result_1509952483 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 756;
    F.filename = "system.nim";
    result_1509952483 = ((s_1509952481.a <= value_1509952482) && (value_1509952482 <= s_1509952481.b));
  framePtr = F.prev;

  return result_1509952483;

}

function HEX2EHEX2E_1509952448(a_1509952451, b_1509952452) {
  var result_1509952455 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "system.nim";
    result_1509952455 = nimCopy(result_1509952455, {a: nimCopy(null, a_1509952451, NTI1509949470), b: nimCopy(null, b_1509952452, NTI1509949470)}, NTI1509951290);
  framePtr = F.prev;

  return result_1509952455;

}

function parsePattern_1509951717(input_1509951718, pattern_1509951719, i_1509951720, i_1509951720_Idx, parsed_1509951721, loc_1509951722) {
      var Temporary13;
      var Temporary14;
        var Temporary15;

  var result_1509951723 = false;

  var F = {procname: "times.parsePattern", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1911;
    F.filename = "times.nim";
    result_1509951723 = true;
    F.line = 1913;
    switch (pattern_1509951719) {
    case 0:
      F.line = 1915;
      F.line = 1901;
      var svHEX60gensym159_1509951742 = [0];
      F.line = 1902;
      var pdHEX60gensym159_1509951743 = parseInt_1509951382(input_1509951718, svHEX60gensym159_1509951742, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(1, 2).b, false);
      if ((pdHEX60gensym159_1509951743 < HEX2EHEX2E_788529202(1, 2).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym159_1509951743);
      var monthday_1509951744 = svHEX60gensym159_1509951742[0];
      F.line = 1916;
      parsed_1509951721.monthday = nimCopy(parsed_1509951721.monthday, some_1509951745(monthday_1509951744), NTI1509950468);
      F.line = 1917;
      result_1509951723 = contains_1509951789(HEX2EHEX2E_1509951760(1, 31), monthday_1509951744);
      break;
    case 1:
      F.line = 1919;
      F.line = 1901;
      var svHEX60gensym163_1509951803 = [0];
      F.line = 1902;
      var pdHEX60gensym163_1509951804 = parseInt_1509951382(input_1509951718, svHEX60gensym163_1509951803, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(2, 2).b, false);
      if ((pdHEX60gensym163_1509951804 < HEX2EHEX2E_788529202(2, 2).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym163_1509951804);
      var monthday_1509951805 = svHEX60gensym163_1509951803[0];
      F.line = 1920;
      parsed_1509951721.monthday = nimCopy(parsed_1509951721.monthday, some_1509951745(monthday_1509951805), NTI1509950468);
      F.line = 1921;
      result_1509951723 = contains_1509951789(HEX2EHEX2E_1509951760(1, 31), monthday_1509951805);
      break;
    case 2:
      F.line = 1923;
      result_1509951723 = false;
      Label1: {
        F.line = 1924;
        var d_1509951881 = 0;
        F.line = 1924;
        var v_1509951882 = [];
        F.line = 156;
        F.filename = "iterators.nim";
        var i_520093999 = 0;
        Label2: {
          F.line = 157;
            Label3: while (true) {
            if (!true) break Label3;
              F.line = 1924;
              F.filename = "times.nim";
              d_1509951881 = i_520093999;
              F.line = 1924;
              v_1509951882 = loc_1509951722.ddd[chckIndx(i_520093999, 0, (loc_1509951722.ddd).length - 1)];
              if ((nsuCmpIgnoreCase(substr_33558079(input_1509951718, i_1509951720[i_1509951720_Idx], HEX2D_1509949470(HEX2B_1509949462(i_1509951720[i_1509951720_Idx], (v_1509951882).length), 1)), v_1509951882) == 0)) {
              F.line = 1926;
              parsed_1509951721.weekday = nimCopy(parsed_1509951721.weekday, some_1509951883(d_1509951881), NTI1509950493);
              F.line = 1927;
              result_1509951723 = true;
              F.line = 1928;
              inc_1509949474(i_1509951720, i_1509951720_Idx, (v_1509951882).length);
              F.line = 1929;
              break Label1;
              }
              
              if ((6 <= i_520093999)) {
              F.line = 159;
              F.filename = "iterators.nim";
              break Label2;
              }
              
              F.line = 160;
              i_520093999 = addInt(i_520093999, 1);
            }
        };
      };
      break;
    case 3:
      F.line = 1931;
      F.filename = "times.nim";
      result_1509951723 = false;
      Label4: {
        F.line = 1932;
        var d_1509951894 = 0;
        F.line = 1932;
        var v_1509951895 = [];
        F.line = 156;
        F.filename = "iterators.nim";
        var i_520094002 = 0;
        Label5: {
          F.line = 157;
            Label6: while (true) {
            if (!true) break Label6;
              F.line = 1932;
              F.filename = "times.nim";
              d_1509951894 = i_520094002;
              F.line = 1932;
              v_1509951895 = loc_1509951722.dddd[chckIndx(i_520094002, 0, (loc_1509951722.dddd).length - 1)];
              if ((nsuCmpIgnoreCase(substr_33558079(input_1509951718, i_1509951720[i_1509951720_Idx], HEX2D_1509949470(HEX2B_1509949462(i_1509951720[i_1509951720_Idx], (v_1509951895).length), 1)), v_1509951895) == 0)) {
              F.line = 1934;
              parsed_1509951721.weekday = nimCopy(parsed_1509951721.weekday, some_1509951883(d_1509951894), NTI1509950493);
              F.line = 1935;
              result_1509951723 = true;
              F.line = 1936;
              inc_1509949474(i_1509951720, i_1509951720_Idx, (v_1509951895).length);
              F.line = 1937;
              break Label4;
              }
              
              if ((6 <= i_520094002)) {
              F.line = 159;
              F.filename = "iterators.nim";
              break Label5;
              }
              
              F.line = 160;
              i_520094002 = addInt(i_520094002, 1);
            }
        };
      };
      break;
    case 4:
      F.line = 1940;
      F.filename = "times.nim";
      F.line = 1901;
      var svHEX60gensym167_1509951906 = [0];
      F.line = 1902;
      var pdHEX60gensym167_1509951907 = parseInt_1509951382(input_1509951718, svHEX60gensym167_1509951906, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(2, 2).b, false);
      if ((pdHEX60gensym167_1509951907 < HEX2EHEX2E_788529202(2, 2).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym167_1509951907);
      var isoyear_1509951908 = svHEX60gensym167_1509951906[0];
      F.line = 1941;
      var thisCen_1509951909 = divInt(now_1509951132().year, 100);
      F.line = 1942;
      parsed_1509951721.isoyear = nimCopy(parsed_1509951721.isoyear, some_1509951745(HEX2B_1509949462(HEX2A_1509949454(thisCen_1509951909, 100), isoyear_1509951908)), NTI1509950468);
      F.line = 1943;
      result_1509951723 = (0 < isoyear_1509951908);
      break;
    case 5:
      F.line = 1945;
      F.line = 1901;
      var svHEX60gensym169_1509951924 = [0];
      F.line = 1902;
      var pdHEX60gensym169_1509951925 = parseInt_1509951382(input_1509951718, svHEX60gensym169_1509951924, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(1, 2147483647).b, false);
      if ((pdHEX60gensym169_1509951925 < HEX2EHEX2E_788529202(1, 2147483647).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym169_1509951925);
      var isoyear_1509951926 = svHEX60gensym169_1509951924[0];
      F.line = 1946;
      parsed_1509951721.isoyear = nimCopy(parsed_1509951721.isoyear, some_1509951745(isoyear_1509951926), NTI1509950468);
      F.line = 1947;
      result_1509951723 = (0 < isoyear_1509951926);
      break;
    case 6:
    case 8:
      F.line = 1949;
      F.line = 1901;
      var svHEX60gensym171_1509951937 = [0];
      F.line = 1902;
      var pdHEX60gensym171_1509951938 = parseInt_1509951382(input_1509951718, svHEX60gensym171_1509951937, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(1, 2).b, false);
      if ((pdHEX60gensym171_1509951938 < HEX2EHEX2E_788529202(1, 2).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym171_1509951938);
      parsed_1509951721.hour = svHEX60gensym171_1509951937[0];
      F.line = 1950;
      result_1509951723 = contains_1509951978(HEX2EHEX2E_1509951949(0, 23), parsed_1509951721.hour);
      break;
    case 7:
    case 9:
      F.line = 1952;
      F.line = 1901;
      var svHEX60gensym175_1509951992 = [0];
      F.line = 1902;
      var pdHEX60gensym175_1509951993 = parseInt_1509951382(input_1509951718, svHEX60gensym175_1509951992, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(2, 2).b, false);
      if ((pdHEX60gensym175_1509951993 < HEX2EHEX2E_788529202(2, 2).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym175_1509951993);
      parsed_1509951721.hour = svHEX60gensym175_1509951992[0];
      F.line = 1953;
      result_1509951723 = contains_1509951978(HEX2EHEX2E_1509951949(0, 23), parsed_1509951721.hour);
      break;
    case 10:
      F.line = 1955;
      F.line = 1901;
      var svHEX60gensym179_1509952024 = [0];
      F.line = 1902;
      var pdHEX60gensym179_1509952025 = parseInt_1509951382(input_1509951718, svHEX60gensym179_1509952024, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(1, 2).b, false);
      if ((pdHEX60gensym179_1509952025 < HEX2EHEX2E_788529202(1, 2).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym179_1509952025);
      parsed_1509951721.minute = svHEX60gensym179_1509952024[0];
      F.line = 1956;
      result_1509951723 = contains_1509952065(HEX2EHEX2E_1509952036(0, 59), parsed_1509951721.hour);
      break;
    case 11:
      F.line = 1958;
      F.line = 1901;
      var svHEX60gensym183_1509952079 = [0];
      F.line = 1902;
      var pdHEX60gensym183_1509952080 = parseInt_1509951382(input_1509951718, svHEX60gensym183_1509952079, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(2, 2).b, false);
      if ((pdHEX60gensym183_1509952080 < HEX2EHEX2E_788529202(2, 2).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym183_1509952080);
      parsed_1509951721.minute = svHEX60gensym183_1509952079[0];
      F.line = 1959;
      result_1509951723 = contains_1509952065(HEX2EHEX2E_1509952036(0, 59), parsed_1509951721.hour);
      break;
    case 12:
      F.line = 1961;
      F.line = 1901;
      var svHEX60gensym187_1509952111 = [0];
      F.line = 1902;
      var pdHEX60gensym187_1509952112 = parseInt_1509951382(input_1509951718, svHEX60gensym187_1509952111, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(1, 2).b, false);
      if ((pdHEX60gensym187_1509952112 < HEX2EHEX2E_788529202(1, 2).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym187_1509952112);
      var month_1509952113 = svHEX60gensym187_1509952111[0];
      F.line = 1962;
      result_1509951723 = contains_1006637691(HEX2EHEX2E_788529202(1, 12), month_1509952113);
      F.line = 1963;
      parsed_1509951721.month = nimCopy(parsed_1509951721.month, some_1509951745(month_1509952113), NTI1509950468);
      break;
    case 13:
      F.line = 1965;
      F.line = 1901;
      var svHEX60gensym189_1509952137 = [0];
      F.line = 1902;
      var pdHEX60gensym189_1509952138 = parseInt_1509951382(input_1509951718, svHEX60gensym189_1509952137, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(2, 2).b, false);
      if ((pdHEX60gensym189_1509952138 < HEX2EHEX2E_788529202(2, 2).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym189_1509952138);
      var month_1509952139 = svHEX60gensym189_1509952137[0];
      F.line = 1966;
      result_1509951723 = contains_1006637691(HEX2EHEX2E_788529202(1, 12), month_1509952139);
      F.line = 1967;
      parsed_1509951721.month = nimCopy(parsed_1509951721.month, some_1509951745(month_1509952139), NTI1509950468);
      break;
    case 14:
      F.line = 1969;
      result_1509951723 = false;
      Label7: {
        F.line = 1970;
        var n_1509952205 = 0;
        F.line = 1970;
        var v_1509952206 = [];
        F.line = 156;
        F.filename = "iterators.nim";
        var i_520094006 = 1;
        Label8: {
          F.line = 157;
            Label9: while (true) {
            if (!true) break Label9;
              F.line = 1970;
              F.filename = "times.nim";
              n_1509952205 = i_520094006;
              F.line = 1970;
              v_1509952206 = loc_1509951722.MMM[chckIndx(i_520094006, 1, (loc_1509951722.MMM).length + (1) - 1) - (1)];
              if ((nsuCmpIgnoreCase(substr_33558079(input_1509951718, i_1509951720[i_1509951720_Idx], HEX2D_1509949470(HEX2B_1509949462(i_1509951720[i_1509951720_Idx], (v_1509952206).length), 1)), v_1509952206) == 0)) {
              F.line = 1972;
              result_1509951723 = true;
              F.line = 1973;
              inc_1509949474(i_1509951720, i_1509951720_Idx, (v_1509952206).length);
              F.line = 1974;
              parsed_1509951721.month = nimCopy(parsed_1509951721.month, some_1509951745(((n_1509952205) | 0)), NTI1509950468);
              F.line = 1975;
              break Label7;
              }
              
              if ((12 <= i_520094006)) {
              F.line = 159;
              F.filename = "iterators.nim";
              break Label8;
              }
              
              F.line = 160;
              i_520094006 = addInt(i_520094006, 1);
            }
        };
      };
      break;
    case 15:
      F.line = 1977;
      F.filename = "times.nim";
      result_1509951723 = false;
      Label10: {
        F.line = 1978;
        var n_1509952216 = 0;
        F.line = 1978;
        var v_1509952217 = [];
        F.line = 156;
        F.filename = "iterators.nim";
        var i_520094009 = 1;
        Label11: {
          F.line = 157;
            Label12: while (true) {
            if (!true) break Label12;
              F.line = 1978;
              F.filename = "times.nim";
              n_1509952216 = i_520094009;
              F.line = 1978;
              v_1509952217 = loc_1509951722.MMMM[chckIndx(i_520094009, 1, (loc_1509951722.MMMM).length + (1) - 1) - (1)];
              if ((nsuCmpIgnoreCase(substr_33558079(input_1509951718, i_1509951720[i_1509951720_Idx], HEX2D_1509949470(HEX2B_1509949462(i_1509951720[i_1509951720_Idx], (v_1509952217).length), 1)), v_1509952217) == 0)) {
              F.line = 1980;
              result_1509951723 = true;
              F.line = 1981;
              inc_1509949474(i_1509951720, i_1509951720_Idx, (v_1509952217).length);
              F.line = 1982;
              parsed_1509951721.month = nimCopy(parsed_1509951721.month, some_1509951745(((n_1509952216) | 0)), NTI1509950468);
              F.line = 1983;
              break Label10;
              }
              
              if ((12 <= i_520094009)) {
              F.line = 159;
              F.filename = "iterators.nim";
              break Label11;
              }
              
              F.line = 160;
              i_520094009 = addInt(i_520094009, 1);
            }
        };
      };
      break;
    case 16:
      F.line = 1985;
      F.filename = "times.nim";
      F.line = 1901;
      var svHEX60gensym191_1509952228 = [0];
      F.line = 1902;
      var pdHEX60gensym191_1509952229 = parseInt_1509951382(input_1509951718, svHEX60gensym191_1509952228, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(1, 2).b, false);
      if ((pdHEX60gensym191_1509952229 < HEX2EHEX2E_788529202(1, 2).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym191_1509952229);
      parsed_1509951721.second = svHEX60gensym191_1509952228[0];
      break;
    case 17:
      F.line = 1987;
      F.line = 1901;
      var svHEX60gensym192_1509952237 = [0];
      F.line = 1902;
      var pdHEX60gensym192_1509952238 = parseInt_1509951382(input_1509951718, svHEX60gensym192_1509952237, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(2, 2).b, false);
      if ((pdHEX60gensym192_1509952238 < HEX2EHEX2E_788529202(2, 2).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym192_1509952238);
      parsed_1509951721.second = svHEX60gensym192_1509952237[0];
      break;
    case 18:
    case 19:
    case 20:
      F.line = 1989;
      var len_1509952242 = (reprEnum(pattern_1509951719, NTI1509950457)).length;
      F.line = 1990;
      F.line = 1901;
      var svHEX60gensym193_1509952250 = [0];
      F.line = 1902;
      var pdHEX60gensym193_1509952251 = parseInt_1509951382(input_1509951718, svHEX60gensym193_1509952250, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(len_1509952242, len_1509952242).b, false);
      if ((pdHEX60gensym193_1509952251 < HEX2EHEX2E_788529202(len_1509952242, len_1509952242).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym193_1509952251);
      var v_1509952252 = svHEX60gensym193_1509952250[0];
      F.line = 1991;
      parsed_1509951721.nanosecond = HEX2A_1509949454(v_1509952252, HEX5E_1509952253(10, chckRange(HEX2D_1509949470(9, len_1509952242), 0, 2147483647)));
      F.line = 1992;
      result_1509951723 = contains_1509952311(HEX2EHEX2E_1509952282(0, 999999999), parsed_1509951721.nanosecond);
      break;
    case 21:
      F.line = 1994;
      switch (input_1509951718[chckIndx(i_1509951720[i_1509951720_Idx], 0, (input_1509951718).length - 1)]) {
      case 80:
        F.line = 1996;
        parsed_1509951721.amPm = 2;
        break;
      case 65:
        F.line = 1998;
        parsed_1509951721.amPm = 1;
        break;
      default: 
        F.line = 2000;
        result_1509951723 = false;
        break;
      }
      F.line = 2001;
      inc_1509949474(i_1509951720, i_1509951720_Idx, 1);
      break;
    case 22:
      if ((nsuCmpIgnoreCase(substr_33558079(input_1509951718, i_1509951720[i_1509951720_Idx], HEX2B_1509949462(i_1509951720[i_1509951720_Idx], 1)), [65,77]) == 0)) {
      F.line = 2004;
      parsed_1509951721.amPm = 1;
      F.line = 2005;
      inc_1509949474(i_1509951720, i_1509951720_Idx, 2);
      }
      else {
      if ((nsuCmpIgnoreCase(substr_33558079(input_1509951718, i_1509951720[i_1509951720_Idx], HEX2B_1509949462(i_1509951720[i_1509951720_Idx], 1)), [80,77]) == 0)) {
      F.line = 2007;
      parsed_1509951721.amPm = 2;
      F.line = 2008;
      inc_1509949474(i_1509951720, i_1509951720_Idx, 2);
      }
      else {
        F.line = 2010;
        result_1509951723 = false;
      }
      }
      break;
    case 23:
      F.line = 2013;
      F.line = 1901;
      var svHEX60gensym197_1509952325 = [0];
      F.line = 1902;
      var pdHEX60gensym197_1509952326 = parseInt_1509951382(input_1509951718, svHEX60gensym197_1509952325, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(2, 2).b, false);
      if ((pdHEX60gensym197_1509952326 < HEX2EHEX2E_788529202(2, 2).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym197_1509952326);
      var year_1509952327 = svHEX60gensym197_1509952325[0];
      F.line = 2014;
      var thisCen_1509952328 = divInt(now_1509951132().year, 100);
      F.line = 2015;
      parsed_1509951721.year = nimCopy(parsed_1509951721.year, some_1509951745(HEX2B_1509949462(HEX2A_1509949454(thisCen_1509952328, 100), year_1509952327)), NTI1509950468);
      F.line = 2016;
      result_1509951723 = (0 < year_1509952327);
      break;
    case 24:
      F.line = 2018;
      if ((ConstSet5[input_1509951718[chckIndx(i_1509951720[i_1509951720_Idx], 0, (input_1509951718).length - 1)]] != undefined)) {
      F.line = 1901;
      var svHEX60gensym200_1509952347 = [0];
      F.line = 1902;
      var pdHEX60gensym200_1509952348 = parseInt_1509951382(input_1509951718, svHEX60gensym200_1509952347, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(4, 2147483647).b, true);
      if ((pdHEX60gensym200_1509952348 < HEX2EHEX2E_788529202(4, 2147483647).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym200_1509952348);
      Temporary13 = svHEX60gensym200_1509952347[0];
      }
      else {
        F.line = 1901;
        var svHEX60gensym201_1509952356 = [0];
        F.line = 1902;
        var pdHEX60gensym201_1509952357 = parseInt_1509951382(input_1509951718, svHEX60gensym201_1509952356, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(4, 4).b, false);
        if ((pdHEX60gensym201_1509952357 < HEX2EHEX2E_788529202(4, 4).a)) {
        F.line = 1904;
        result_1509951723 = false;
        break BeforeRet;
        }
        
        F.line = 1905;
        inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym201_1509952357);
      Temporary13 = svHEX60gensym201_1509952356[0];
      }
      
      var year_1509952358 = Temporary13;
      F.line = 2023;
      result_1509951723 = (0 < year_1509952358);
      F.line = 2024;
      parsed_1509951721.year = nimCopy(parsed_1509951721.year, some_1509951745(year_1509952358), NTI1509950468);
      break;
    case 25:
      F.line = 2026;
      F.line = 1901;
      var svHEX60gensym203_1509952373 = [0];
      F.line = 1902;
      var pdHEX60gensym203_1509952374 = parseInt_1509951382(input_1509951718, svHEX60gensym203_1509952373, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(1, 2147483647).b, false);
      if ((pdHEX60gensym203_1509952374 < HEX2EHEX2E_788529202(1, 2147483647).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym203_1509952374);
      var year_1509952375 = svHEX60gensym203_1509952373[0];
      F.line = 2027;
      parsed_1509951721.year = nimCopy(parsed_1509951721.year, some_1509951745(year_1509952375), NTI1509950468);
      F.line = 2028;
      result_1509951723 = (0 < year_1509952375);
      break;
    case 26:
      F.line = 2030;
      if ((ConstSet6[input_1509951718[chckIndx(i_1509951720[i_1509951720_Idx], 0, (input_1509951718).length - 1)]] != undefined)) {
      F.line = 1901;
      var svHEX60gensym206_1509952394 = [0];
      F.line = 1902;
      var pdHEX60gensym206_1509952395 = parseInt_1509951382(input_1509951718, svHEX60gensym206_1509952394, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(4, 2147483647).b, true);
      if ((pdHEX60gensym206_1509952395 < HEX2EHEX2E_788529202(4, 2147483647).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym206_1509952395);
      Temporary14 = svHEX60gensym206_1509952394[0];
      }
      else {
        F.line = 1901;
        var svHEX60gensym207_1509952403 = [0];
        F.line = 1902;
        var pdHEX60gensym207_1509952404 = parseInt_1509951382(input_1509951718, svHEX60gensym207_1509952403, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(4, 4).b, false);
        if ((pdHEX60gensym207_1509952404 < HEX2EHEX2E_788529202(4, 4).a)) {
        F.line = 1904;
        result_1509951723 = false;
        break BeforeRet;
        }
        
        F.line = 1905;
        inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym207_1509952404);
      Temporary14 = svHEX60gensym207_1509952403[0];
      }
      
      var year_1509952405 = Temporary14;
      F.line = 2035;
      parsed_1509951721.year = nimCopy(parsed_1509951721.year, some_1509951745(year_1509952405), NTI1509950468);
      break;
    case 27:
      F.line = 2037;
      F.line = 1901;
      var svHEX60gensym208_1509952420 = [0];
      F.line = 1902;
      var pdHEX60gensym208_1509952421 = parseInt_1509951382(input_1509951718, svHEX60gensym208_1509952420, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(1, 2147483647).b, true);
      if ((pdHEX60gensym208_1509952421 < HEX2EHEX2E_788529202(1, 2147483647).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym208_1509952421);
      parsed_1509951721.year = nimCopy(parsed_1509951721.year, some_1509951745(svHEX60gensym208_1509952420[0]), NTI1509950468);
      break;
    case 28:
      F.line = 2039;
      F.line = 1901;
      var svHEX60gensym209_1509952432 = [0];
      F.line = 1902;
      var pdHEX60gensym209_1509952433 = parseInt_1509951382(input_1509951718, svHEX60gensym209_1509952432, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(1, 2).b, false);
      if ((pdHEX60gensym209_1509952433 < HEX2EHEX2E_788529202(1, 2).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym209_1509952433);
      var yearweek_1509952434 = svHEX60gensym209_1509952432[0];
      F.line = 2040;
      parsed_1509951721.yearweek = nimCopy(parsed_1509951721.yearweek, some_1509951745(yearweek_1509952434), NTI1509950468);
      F.line = 2041;
      result_1509951723 = contains_1509952477(HEX2EHEX2E_1509952448(1, 53), yearweek_1509952434);
      break;
    case 29:
      F.line = 2043;
      F.line = 1901;
      var svHEX60gensym213_1509952491 = [0];
      F.line = 1902;
      var pdHEX60gensym213_1509952492 = parseInt_1509951382(input_1509951718, svHEX60gensym213_1509952491, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(2, 2).b, false);
      if ((pdHEX60gensym213_1509952492 < HEX2EHEX2E_788529202(2, 2).a)) {
      F.line = 1904;
      result_1509951723 = false;
      break BeforeRet;
      }
      
      F.line = 1905;
      inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym213_1509952492);
      var yearweek_1509952493 = svHEX60gensym213_1509952491[0];
      F.line = 2044;
      parsed_1509951721.yearweek = nimCopy(parsed_1509951721.yearweek, some_1509951745(yearweek_1509952493), NTI1509950468);
      F.line = 2045;
      result_1509951723 = contains_1509952477(HEX2EHEX2E_1509952448(1, 53), yearweek_1509952493);
      break;
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
      F.line = 2047;
      switch (input_1509951718[chckIndx(i_1509951720[i_1509951720_Idx], 0, (input_1509951718).length - 1)]) {
      case 43:
      case 45:
        F.line = 2049;
        if ((input_1509951718[chckIndx(i_1509951720[i_1509951720_Idx], 0, (input_1509951718).length - 1)] == 45)) {
        Temporary15 = 1;
        }
        else {
        Temporary15 = (-1);
        }
        
        var sign_1509952520 = Temporary15;
        F.line = 2050;
        i_1509951720[i_1509951720_Idx] = addInt(i_1509951720[i_1509951720_Idx], 1);
        F.line = 2051;
        var offset_1509952526 = [0];
        F.line = 2052;
        switch (pattern_1509951719) {
        case 30:
          F.line = 2054;
          F.line = 1901;
          var svHEX60gensym217_1509952534 = [0];
          F.line = 1902;
          var pdHEX60gensym217_1509952535 = parseInt_1509951382(input_1509951718, svHEX60gensym217_1509952534, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(1, 2).b, false);
          if ((pdHEX60gensym217_1509952535 < HEX2EHEX2E_788529202(1, 2).a)) {
          F.line = 1904;
          result_1509951723 = false;
          break BeforeRet;
          }
          
          F.line = 1905;
          inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym217_1509952535);
          offset_1509952526[0] = HEX2A_1509949454(svHEX60gensym217_1509952534[0], 3600);
          break;
        case 31:
          F.line = 2056;
          F.line = 1901;
          var svHEX60gensym218_1509952543 = [0];
          F.line = 1902;
          var pdHEX60gensym218_1509952544 = parseInt_1509951382(input_1509951718, svHEX60gensym218_1509952543, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(2, 2).b, false);
          if ((pdHEX60gensym218_1509952544 < HEX2EHEX2E_788529202(2, 2).a)) {
          F.line = 1904;
          result_1509951723 = false;
          break BeforeRet;
          }
          
          F.line = 1905;
          inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym218_1509952544);
          offset_1509952526[0] = HEX2A_1509949454(svHEX60gensym218_1509952543[0], 3600);
          break;
        case 32:
        case 34:
          F.line = 2058;
          F.line = 1901;
          var svHEX60gensym219_1509952552 = [0];
          F.line = 1902;
          var pdHEX60gensym219_1509952553 = parseInt_1509951382(input_1509951718, svHEX60gensym219_1509952552, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(2, 2).b, false);
          if ((pdHEX60gensym219_1509952553 < HEX2EHEX2E_788529202(2, 2).a)) {
          F.line = 1904;
          result_1509951723 = false;
          break BeforeRet;
          }
          
          F.line = 1905;
          inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym219_1509952553);
          inc_1509949474(offset_1509952526, 0, HEX2A_1509949454(svHEX60gensym219_1509952552[0], 3600));
          if ((pattern_1509951719 == 32)) {
          if (!((input_1509951718[chckIndx(i_1509951720[i_1509951720_Idx], 0, (input_1509951718).length - 1)] == 58))) {
          F.line = 2061;
          result_1509951723 = false;
          break BeforeRet;
          }
          
          F.line = 2062;
          i_1509951720[i_1509951720_Idx] = addInt(i_1509951720[i_1509951720_Idx], 1);
          }
          
          F.line = 2063;
          F.line = 1901;
          var svHEX60gensym221_1509952570 = [0];
          F.line = 1902;
          var pdHEX60gensym221_1509952571 = parseInt_1509951382(input_1509951718, svHEX60gensym221_1509952570, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(2, 2).b, false);
          if ((pdHEX60gensym221_1509952571 < HEX2EHEX2E_788529202(2, 2).a)) {
          F.line = 1904;
          result_1509951723 = false;
          break BeforeRet;
          }
          
          F.line = 1905;
          inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym221_1509952571);
          inc_1509949474(offset_1509952526, 0, HEX2A_1509949454(svHEX60gensym221_1509952570[0], 60));
          break;
        case 33:
        case 35:
          F.line = 2065;
          F.line = 1901;
          var svHEX60gensym222_1509952579 = [0];
          F.line = 1902;
          var pdHEX60gensym222_1509952580 = parseInt_1509951382(input_1509951718, svHEX60gensym222_1509952579, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(2, 2).b, false);
          if ((pdHEX60gensym222_1509952580 < HEX2EHEX2E_788529202(2, 2).a)) {
          F.line = 1904;
          result_1509951723 = false;
          break BeforeRet;
          }
          
          F.line = 1905;
          inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym222_1509952580);
          inc_1509949474(offset_1509952526, 0, HEX2A_1509949454(svHEX60gensym222_1509952579[0], 3600));
          if ((pattern_1509951719 == 33)) {
          if (!((input_1509951718[chckIndx(i_1509951720[i_1509951720_Idx], 0, (input_1509951718).length - 1)] == 58))) {
          F.line = 2068;
          result_1509951723 = false;
          break BeforeRet;
          }
          
          F.line = 2069;
          i_1509951720[i_1509951720_Idx] = addInt(i_1509951720[i_1509951720_Idx], 1);
          }
          
          F.line = 2070;
          F.line = 1901;
          var svHEX60gensym224_1509952597 = [0];
          F.line = 1902;
          var pdHEX60gensym224_1509952598 = parseInt_1509951382(input_1509951718, svHEX60gensym224_1509952597, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(2, 2).b, false);
          if ((pdHEX60gensym224_1509952598 < HEX2EHEX2E_788529202(2, 2).a)) {
          F.line = 1904;
          result_1509951723 = false;
          break BeforeRet;
          }
          
          F.line = 1905;
          inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym224_1509952598);
          inc_1509949474(offset_1509952526, 0, HEX2A_1509949454(svHEX60gensym224_1509952597[0], 60));
          if ((pattern_1509951719 == 33)) {
          if (!((input_1509951718[chckIndx(i_1509951720[i_1509951720_Idx], 0, (input_1509951718).length - 1)] == 58))) {
          F.line = 2073;
          result_1509951723 = false;
          break BeforeRet;
          }
          
          F.line = 2074;
          i_1509951720[i_1509951720_Idx] = addInt(i_1509951720[i_1509951720_Idx], 1);
          }
          
          F.line = 2075;
          F.line = 1901;
          var svHEX60gensym226_1509952615 = [0];
          F.line = 1902;
          var pdHEX60gensym226_1509952616 = parseInt_1509951382(input_1509951718, svHEX60gensym226_1509952615, 0, i_1509951720[i_1509951720_Idx], HEX2EHEX2E_788529202(2, 2).b, false);
          if ((pdHEX60gensym226_1509952616 < HEX2EHEX2E_788529202(2, 2).a)) {
          F.line = 1904;
          result_1509951723 = false;
          break BeforeRet;
          }
          
          F.line = 1905;
          inc_1509949474(i_1509951720, i_1509951720_Idx, pdHEX60gensym226_1509952616);
          inc_1509949474(offset_1509952526, 0, svHEX60gensym226_1509952615[0]);
          break;
        default: 
          if (true) {
          F.line = 2076;
          failedAssertImpl_268435541(makeNimstrLit("/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim(2076, 13) `false` "));
          }
          
          break;
        }
        F.line = 2077;
        parsed_1509951721.utcOffset = nimCopy(parsed_1509951721.utcOffset, some_1509951745(HEX2A_1509949454(offset_1509952526[0], sign_1509952520)), NTI1509950468);
        break;
      case 90:
        F.line = 2079;
        parsed_1509951721.utcOffset = nimCopy(parsed_1509951721.utcOffset, some_1509951745(0), NTI1509950468);
        F.line = 2080;
        i_1509951720[i_1509951720_Idx] = addInt(i_1509951720[i_1509951720_Idx], 1);
        break;
      default: 
        F.line = 2082;
        result_1509951723 = false;
        break;
      }
      break;
    case 36:
      if ((nsuCmpIgnoreCase(substr_33558079(input_1509951718, i_1509951720[i_1509951720_Idx], HEX2B_1509949462(i_1509951720[i_1509951720_Idx], 1)), [66,67]) == 0)) {
      F.line = 2085;
      parsed_1509951721.era = 2;
      F.line = 2086;
      inc_1509949474(i_1509951720, i_1509951720_Idx, 2);
      }
      else {
      if ((nsuCmpIgnoreCase(substr_33558079(input_1509951718, i_1509951720[i_1509951720_Idx], HEX2B_1509949462(i_1509951720[i_1509951720_Idx], 1)), [65,68]) == 0)) {
      F.line = 2088;
      parsed_1509951721.era = 1;
      F.line = 2089;
      inc_1509949474(i_1509951720, i_1509951720_Idx, 2);
      }
      else {
        F.line = 2091;
        result_1509951723 = false;
      }
      }
      break;
    case 37:
      if (true) {
      F.line = 2092;
      failedAssertImpl_268435541(makeNimstrLit("/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim(2092, 11) `false` Can\'t happen"));
      }
      
      break;
    }
  };
  framePtr = F.prev;

  return result_1509951723;

}

function isSome_1509952763(self_1509952765) {
  var result_1509952766 = false;

  var F = {procname: "isSome.isSome", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 161;
    F.filename = "options.nim";
    result_1509952766 = self_1509952765.has;
  framePtr = F.prev;

  return result_1509952766;

}

function get_1509952754(self_1509952756, otherwise_1509952757) {
    var Temporary1;

  var result_1509952758 = 0;

  var F = {procname: "get.get", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 206;
    F.filename = "options.nim";
    if (isSome_1509952763(self_1509952756)) {
    Temporary1 = self_1509952756.val;
    }
    else {
    Temporary1 = otherwise_1509952757;
    }
    
    result_1509952758 = Temporary1;
  framePtr = F.prev;

  return result_1509952758;

}

function isSome_1509952966(self_1509952968) {
  var result_1509952969 = false;

  var F = {procname: "isSome.isSome", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 161;
    F.filename = "options.nim";
    result_1509952969 = self_1509952968.has;
  framePtr = F.prev;

  return result_1509952969;

}

function get_1509952957(self_1509952959, otherwise_1509952960) {
    var Temporary1;

  var result_1509952961 = 0;

  var F = {procname: "get.get", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 206;
    F.filename = "options.nim";
    if (isSome_1509952966(self_1509952959)) {
    Temporary1 = self_1509952959.val;
    }
    else {
    Temporary1 = otherwise_1509952960;
    }
    
    result_1509952961 = Temporary1;
  framePtr = F.prev;

  return result_1509952961;

}

function isNone_1509952840(self_1509952842) {
  var result_1509952843 = false;

  var F = {procname: "isNone.isNone", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 176;
    F.filename = "options.nim";
    result_1509952843 = !(self_1509952842.has);
  framePtr = F.prev;

  return result_1509952843;

}

function zonedTimeFromAdjTime_1509951022(zone_1509951023, adjTime_1509951024) {
  var result_1509951025 = ({time: ({seconds: 0n, nanosecond: 0}), utcOffset: 0, isDst: false});

  var F = {procname: "times.zonedTimeFromAdjTime", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1239;
    F.filename = "times.nim";
    result_1509951025 = nimCopy(result_1509951025, zone_1509951023.zonedTimeFromAdjTimeImpl(adjTime_1509951024), NTI1509949479);
  framePtr = F.prev;

  return result_1509951025;

}

function monthday_1509950795(dt_1509950796) {
  var result_1509950797 = 0;

  var F = {procname: "times.monthday", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1077;
    F.filename = "times.nim";
    if (!(!((dt_1509950796.monthdayZero == 0)))) {
    F.line = 1078;
    failedAssertImpl_268435541(makeNimstrLit("/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim(1078, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_1509950797 = dt_1509950796.monthdayZero;
  framePtr = F.prev;

  return result_1509950797;

}

function month_1509950803(dt_1509950804) {
  var result_1509950805 = 0;

  var F = {procname: "times.month", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1083;
    F.filename = "times.nim";
    if (!(!((dt_1509950804.monthdayZero == 0)))) {
    F.line = 1085;
    failedAssertImpl_268435541(makeNimstrLit("/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim(1085, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_1509950805 = dt_1509950804.monthZero;
  framePtr = F.prev;

  return result_1509950805;

}

function toAdjTime_1509951061(dt_1509951062) {
  var result_1509951063 = ({seconds: 0n, nanosecond: 0});

  var F = {procname: "times.toAdjTime", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1274;
    F.filename = "times.nim";
    var epochDay_1509951064 = toEpochDay_1509949646(monthday_1509950795(dt_1509951062), month_1509950803(dt_1509951062), dt_1509951062.year);
    F.line = 1275;
    var seconds_1509951065 = [HEX2A_1509949450(epochDay_1509951064, 86400n)];
    F.line = 1276;
    inc_1509949482(seconds_1509951065, 0, HEX2A_1509949454(dt_1509951062.hour, 3600));
    F.line = 1277;
    inc_1509949482(seconds_1509951065, 0, HEX2A_1509949454(dt_1509951062.minute, 60));
    F.line = 1278;
    inc_1509949482(seconds_1509951065, 0, dt_1509951062.second);
    F.line = 1279;
    result_1509951063 = nimCopy(result_1509951063, initTime_1509950521(seconds_1509951065[0], dt_1509951062.nanosecond), NTI1509949472);
  framePtr = F.prev;

  return result_1509951063;

}

function dateTime_1509951134(year_1509951135, month_1509951136, monthday_1509951137, hour_1509951138, minute_1509951139, second_1509951140, nanosecond_1509951141, zone_1509951142) {
  var result_1509951143 = ({m_type: NTI1509949473, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

  var F = {procname: "times.dateTime", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1425;
    F.filename = "times.nim";
    assertValidDate_1509949617(monthday_1509951137, month_1509951136, year_1509951135);
    F.line = 1426;
    var dt_1509951144 = {monthdayZero: monthday_1509951137, year: year_1509951135, monthZero: ((month_1509951136) | 0), hour: nimCopy(null, hour_1509951138, NTI1509949465), minute: nimCopy(null, minute_1509951139, NTI1509949466), second: nimCopy(null, second_1509951140, NTI1509949467), nanosecond: nimCopy(null, nanosecond_1509951141, NTI1509949469), m_type: NTI1509949473, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};
    F.line = 1435;
    result_1509951143 = nimCopy(result_1509951143, initDateTime_1509950909(zonedTimeFromAdjTime_1509951022(zone_1509951142, toAdjTime_1509951061(dt_1509951144)), zone_1509951142), NTI1509949473);
  framePtr = F.prev;

  return result_1509951143;

}

function initDateTime_1509951155(monthday_1509951156, month_1509951157, year_1509951158, hour_1509951159, minute_1509951160, second_1509951161, zone_1509951162) {
  var result_1509951163 = ({m_type: NTI1509949473, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

  var F = {procname: "times.initDateTime", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1449;
    F.filename = "times.nim";
    result_1509951163 = nimCopy(result_1509951163, dateTime_1509951134(year_1509951158, month_1509951157, monthday_1509951156, hour_1509951159, minute_1509951160, second_1509951161, 0, zone_1509951162), NTI1509949473);
  framePtr = F.prev;

  return result_1509951163;

}

function ntSubDuration(a_1509950440, b_1509950441) {
  var result_1509950442 = ({seconds: 0n, nanosecond: 0});

  var F = {procname: "times.-", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 820;
    F.filename = "times.nim";
    result_1509950442 = nimCopy(result_1509950442, normalize_1509949999(HEX2D_1509949466(a_1509950440.seconds, b_1509950441.seconds), BigInt(HEX2D_1509949470(a_1509950440.nanosecond, b_1509950441.nanosecond))), NTI1509949474);
  framePtr = F.prev;

  return result_1509950442;

}

function ntAddDuration(a_1509950429, b_1509950430) {
  var result_1509950431 = ({seconds: 0n, nanosecond: 0});

  var F = {procname: "times.+", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 813;
    F.filename = "times.nim";
    result_1509950431 = nimCopy(result_1509950431, normalize_1509949999(HEX2B_1509949458(a_1509950429.seconds, b_1509950430.seconds), BigInt(HEX2B_1509949462(a_1509950429.nanosecond, b_1509950430.nanosecond))), NTI1509949474);
  framePtr = F.prev;

  return result_1509950431;

}

function evaluateInterval_1509953623(dt_1509953624, interval_1509953625) {
  var result_1509953628 = {Field0: ({seconds: 0n, nanosecond: 0}), Field1: ({seconds: 0n, nanosecond: 0})};

  var F = {procname: "times.evaluateInterval", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 2636;
    F.filename = "times.nim";
    var months_1509953629 = HEX2B_1509949462(HEX2A_1509949454(interval_1509953625.years, 12), interval_1509953625.months);
    F.line = 2637;
    var curYear_1509953630 = dt_1509953624.year;
    F.line = 2638;
    var curMonth_1509953631 = month_1509950803(dt_1509953624);
    F.line = 2639;
    result_1509953628 = nimCopy(result_1509953628, {Field0: ({seconds: 0n, nanosecond: 0}), Field1: ({seconds: 0n, nanosecond: 0})}, NTI1509952017);
    if ((months_1509953629 < 0)) {
    Label1: {
      F.line = 2642;
      var mth_1509953644 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__520094026 = 0;
      F.line = 2642;
      F.filename = "times.nim";
      colontmp__520094026 = HEX2A_1509949454((-1), months_1509953629);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_520094027 = colontmp__520094026;
      Label2: {
        F.line = 34;
          Label3: while (true) {
          if (!(1 <= res_520094027)) break Label3;
            F.line = 2642;
            F.filename = "times.nim";
            mth_1509953644 = res_520094027;
            if ((curMonth_1509953631 == 1)) {
            F.line = 2644;
            curMonth_1509953631 = 12;
            F.line = 2645;
            curYear_1509953630 = subInt(curYear_1509953630, 1);
            }
            else {
              F.line = 2647;
            curMonth_1509953631 = subInt(curMonth_1509953631, 1);
            }
            
            F.line = 2648;
            var days_1509953659 = getDaysInMonth_1509949613(curMonth_1509953631, curYear_1509953630);
            F.line = 2649;
            result_1509953628.Field0 = nimCopy(result_1509953628.Field0, ntSubDuration(result_1509953628.Field0, initDuration_1509949932(0n, 0n, 0n, 0n, 0n, 0n, BigInt(days_1509953659), 0n)), NTI1509949474);
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_520094027 = subInt(res_520094027, 1);
          }
      };
    };
    }
    else {
      Label4: {
        F.line = 2652;
        F.filename = "times.nim";
        var mth_1509953664 = 0;
        F.line = 90;
        F.filename = "iterators_1.nim";
        var res_520094030 = 1;
        Label5: {
          F.line = 91;
            Label6: while (true) {
            if (!(res_520094030 <= months_1509953629)) break Label6;
              F.line = 2652;
              F.filename = "times.nim";
              mth_1509953664 = res_520094030;
              F.line = 2653;
              var days_1509953665 = getDaysInMonth_1509949613(curMonth_1509953631, curYear_1509953630);
              F.line = 2654;
              result_1509953628.Field0 = nimCopy(result_1509953628.Field0, ntAddDuration(result_1509953628.Field0, initDuration_1509949932(0n, 0n, 0n, 0n, 0n, 0n, BigInt(days_1509953665), 0n)), NTI1509949474);
              if ((curMonth_1509953631 == 12)) {
              F.line = 2656;
              curMonth_1509953631 = 1;
              F.line = 2657;
              curYear_1509953630 = addInt(curYear_1509953630, 1);
              }
              else {
                F.line = 2659;
              curMonth_1509953631 = addInt(curMonth_1509953631, 1);
              }
              
              F.line = 93;
              F.filename = "iterators_1.nim";
              res_520094030 = addInt(res_520094030, 1);
            }
        };
      };
    }
    
    F.line = 2661;
    F.filename = "times.nim";
    result_1509953628.Field0 = nimCopy(result_1509953628.Field0, ntAddDuration(result_1509953628.Field0, initDuration_1509949932(0n, 0n, 0n, 0n, 0n, 0n, BigInt(interval_1509953625.days), BigInt(interval_1509953625.weeks))), NTI1509949474);
    F.line = 2664;
    result_1509953628.Field1 = nimCopy(result_1509953628.Field1, initDuration_1509949932(BigInt(interval_1509953625.nanoseconds), BigInt(interval_1509953625.microseconds), BigInt(interval_1509953625.milliseconds), BigInt(interval_1509953625.seconds), BigInt(interval_1509953625.minutes), BigInt(interval_1509953625.hours), 0n, 0n), NTI1509949474);
  framePtr = F.prev;

  return result_1509953628;

}

function ntEqDuration(a_1509950470, b_1509950471) {
  var result_1509950472 = false;

  var F = {procname: "times.==", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 848;
    F.filename = "times.nim";
    result_1509950472 = ((a_1509950470.seconds == b_1509950471.seconds) && (a_1509950470.nanosecond == b_1509950471.nanosecond));
  framePtr = F.prev;

  return result_1509950472;

}

function toTime_1509950899(dt_1509950900) {
  var result_1509950901 = ({seconds: 0n, nanosecond: 0});

  var F = {procname: "times.toTime", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    if (!(!((dt_1509950900.monthdayZero == 0)))) {
    F.line = 1156;
    F.filename = "times.nim";
    failedAssertImpl_268435541(makeNimstrLit("/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim(1156, 3) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    F.line = 1157;
    var epochDay_1509950907 = toEpochDay_1509949646(monthday_1509950795(dt_1509950900), month_1509950803(dt_1509950900), dt_1509950900.year);
    F.line = 1158;
    var seconds_1509950908 = [HEX2A_1509949450(epochDay_1509950907, 86400n)];
    F.line = 1159;
    inc_1509949482(seconds_1509950908, 0, HEX2A_1509949454(dt_1509950900.hour, 3600));
    F.line = 1160;
    inc_1509949482(seconds_1509950908, 0, HEX2A_1509949454(dt_1509950900.minute, 60));
    F.line = 1161;
    inc_1509949482(seconds_1509950908, 0, dt_1509950900.second);
    F.line = 1162;
    inc_1509949482(seconds_1509950908, 0, dt_1509950900.utcOffset);
    F.line = 1163;
    result_1509950901 = nimCopy(result_1509950901, initTime_1509950521(seconds_1509950908[0], dt_1509950900.nanosecond), NTI1509949472);
  framePtr = F.prev;

  return result_1509950901;

}

function HEX2B_1509953699(dt_1509953700, interval_1509953701) {
  var result_1509953702 = ({m_type: NTI1509949473, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

  var F = {procname: "times.+", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 2688;
    F.filename = "times.nim";
    var tmpTuple_1509953703 = evaluateInterval_1509953623(dt_1509953700, interval_1509953701);
    F.line = 2688;
    var adjDur_1509953704 = nimCopy(null, tmpTuple_1509953703["Field0"], NTI1509949474);
    F.line = 2688;
    var absDur_1509953705 = nimCopy(null, tmpTuple_1509953703["Field1"], NTI1509949474);
    if (!(ntEqDuration(adjDur_1509953704, DurationZero_1509949931))) {
    F.line = 2691;
    var zt_1509953706 = zonedTimeFromAdjTime_1509951022(dt_1509953700.timezone, ntAddTime(toAdjTime_1509951061(dt_1509953700), adjDur_1509953704));
    if (!(ntEqDuration(absDur_1509953705, DurationZero_1509949931))) {
    F.line = 2693;
    zt_1509953706 = nimCopy(zt_1509953706, zonedTimeFromTime_1509950998(dt_1509953700.timezone, ntAddTime(zt_1509953706.time, absDur_1509953705)), NTI1509949479);
    F.line = 2694;
    result_1509953702 = nimCopy(result_1509953702, initDateTime_1509950909(zt_1509953706, dt_1509953700.timezone), NTI1509949473);
    }
    else {
      F.line = 2696;
      result_1509953702 = nimCopy(result_1509953702, initDateTime_1509950909(zt_1509953706, dt_1509953700.timezone), NTI1509949473);
    }
    
    }
    else {
      F.line = 2698;
      var zt_1509953707 = zonedTimeFromTime_1509950998(dt_1509953700.timezone, ntAddTime(toTime_1509950899(dt_1509953700), absDur_1509953705));
      F.line = 2699;
      result_1509953702 = nimCopy(result_1509953702, initDateTime_1509950909(zt_1509953707, dt_1509953700.timezone), NTI1509949473);
    }
    
  framePtr = F.prev;

  return result_1509953702;

}

function initDateTime_1509951145(monthday_1509951146, month_1509951147, year_1509951148, hour_1509951149, minute_1509951150, second_1509951151, nanosecond_1509951152, zone_1509951153) {
  var result_1509951154 = ({m_type: NTI1509949473, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

  var F = {procname: "times.initDateTime", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1441;
    F.filename = "times.nim";
    result_1509951154 = nimCopy(result_1509951154, dateTime_1509951134(year_1509951148, month_1509951147, monthday_1509951146, hour_1509951149, minute_1509951150, second_1509951151, nanosecond_1509951152, zone_1509951153), NTI1509949473);
  framePtr = F.prev;

  return result_1509951154;

}

function initTimeInterval_1509953308(nanoseconds_1509953309, microseconds_1509953310, milliseconds_1509953311, seconds_1509953312, minutes_1509953313, hours_1509953314, days_1509953315, weeks_1509953316, months_1509953317, years_1509953318) {
  var result_1509953319 = ({nanoseconds: 0, microseconds: 0, milliseconds: 0, seconds: 0, minutes: 0, hours: 0, days: 0, weeks: 0, months: 0, years: 0});

  var F = {procname: "times.initTimeInterval", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 2368;
    F.filename = "times.nim";
    result_1509953319.nanoseconds = nanoseconds_1509953309;
    F.line = 2369;
    result_1509953319.microseconds = microseconds_1509953310;
    F.line = 2370;
    result_1509953319.milliseconds = milliseconds_1509953311;
    F.line = 2371;
    result_1509953319.seconds = seconds_1509953312;
    F.line = 2372;
    result_1509953319.minutes = minutes_1509953313;
    F.line = 2373;
    result_1509953319.hours = hours_1509953314;
    F.line = 2374;
    result_1509953319.days = days_1509953315;
    F.line = 2375;
    result_1509953319.weeks = weeks_1509953316;
    F.line = 2376;
    result_1509953319.months = months_1509953317;
    F.line = 2377;
    result_1509953319.years = years_1509953318;
  framePtr = F.prev;

  return result_1509953319;

}

function initDateTime_1509951214(weekday_1509951215, isoweek_1509951216, isoyear_1509951217, hour_1509951218, minute_1509951219, second_1509951220, nanosecond_1509951221, zone_1509951222) {
  var result_1509953745 = ({m_type: NTI1509949473, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

  var F = {procname: "times.initDateTime", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 2758;
    F.filename = "times.nim";
    F.line = 2769;
    var d_1509953746 = HEX2D_1509949470(HEX2D_1509949470(HEX2B_1509949462(HEX2A_1509949454(isoweek_1509951216, 7), ((weekday_1509951215) | 0)), ((initDateTime_1509951155(4, 1, isoyear_1509951217, 0, 0, 0, zone_1509951222).weekday) | 0)), 4);
    result_1509953745 = nimCopy(result_1509953745, HEX2B_1509953699(initDateTime_1509951145(1, 1, isoyear_1509951217, hour_1509951218, minute_1509951219, second_1509951220, nanosecond_1509951221, zone_1509951222), initTimeInterval_1509953308(0, 0, 0, 0, 0, 0, d_1509953746, 0, 0, 0)), NTI1509949473);
  framePtr = F.prev;

  return result_1509953745;

}

function get_1509952857(self_1509952859) {
  var result_1509952860 = 0;

  var F = {procname: "get.get", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    if (isNone_1509952840(self_1509952859)) {
    F.line = 202;
    F.filename = "options.nim";
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI671088660, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    F.line = 203;
    result_1509952860 = self_1509952859["val"];
  framePtr = F.prev;

  return result_1509952860;

}

function toDateTimeByWeek_1509952905(p_1509952906, zone_1509952907, f_1509952908, input_1509952909) {
  var result_1509952910 = ({m_type: NTI1509949473, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

  var F = {procname: "times.toDateTimeByWeek", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 2149;
    F.filename = "times.nim";
    var isoyear_1509952927 = get_1509952754(p_1509952906.isoyear, 0);
    F.line = 2150;
    var yearweek_1509952944 = get_1509952754(p_1509952906.yearweek, 1);
    F.line = 2151;
    var weekday_1509952971 = get_1509952957(p_1509952906.weekday, 0);
    if (!((p_1509952906.amPm == 0))) {
    F.line = 2154;
    raiseParseException_1509951341(f_1509952908, input_1509952909, [80,97,114,115,105,110,103,32,105,115,111,32,119,101,101,107,121,101,97,114,32,100,97,116,101,115,32,100,111,101,115,32,110,111,116,32,115,117,112,112,111,114,116,32,97,109,47,112,109]);
    }
    
    if (isSome_1509952763(p_1509952906.year)) {
    F.line = 2157;
    raiseParseException_1509951341(f_1509952908, input_1509952909, [85,115,101,32,105,115,111,45,121,101,97,114,32,71,71,32,111,114,32,71,71,71,71,32,97,115,32,121,101,97,114,32,119,105,116,104,32,105,115,111,32,119,101,101,107,32,110,117,109,98,101,114]);
    }
    
    if (isSome_1509952763(p_1509952906.month)) {
    F.line = 2160;
    raiseParseException_1509951341(f_1509952908, input_1509952909, [85,115,101,32,101,105,116,104,101,114,32,105,115,111,32,119,101,101,107,32,110,117,109,98,101,114,32,86,32,111,114,32,86,86,32,111,114,32,109,111,110,116,104]);
    }
    
    if (isSome_1509952763(p_1509952906.monthday)) {
    F.line = 2163;
    raiseParseException_1509951341(f_1509952908, input_1509952909, [85,115,101,32,119,101,101,107,100,97,121,32,100,100,100,32,111,114,32,100,100,100,100,32,97,115,32,100,97,121,32,119,105,116,104,32,119,105,116,104,32,105,115,111,32,119,101,101,107,32,110,117,109,98,101,114]);
    }
    
    if (isNone_1509952840(p_1509952906.isoyear)) {
    F.line = 2166;
    raiseParseException_1509951341(f_1509952908, input_1509952909, [78,101,101,100,32,105,115,111,45,121,101,97,114,32,119,105,116,104,32,119,101,101,107,32,110,117,109,98,101,114]);
    }
    
    F.line = 2168;
    var hour_1509953005 = p_1509952906.hour;
    F.line = 2169;
    var minute_1509953006 = p_1509952906.minute;
    F.line = 2170;
    var second_1509953007 = p_1509952906.second;
    F.line = 2171;
    var nanosecond_1509953008 = p_1509952906.nanosecond;
    if (isNone_1509952840(p_1509952906.utcOffset)) {
    F.line = 2174;
    result_1509952910 = nimCopy(result_1509952910, initDateTime_1509951214(weekday_1509952971, chckRange(yearweek_1509952944, 1, 53), isoyear_1509952927, chckRange(hour_1509953005, 0, 23), chckRange(minute_1509953006, 0, 59), chckRange(second_1509953007, 0, 60), chckRange(nanosecond_1509953008, 0, 999999999), zone_1509952907), NTI1509949473);
    }
    else {
      F.line = 2177;
      result_1509952910 = nimCopy(result_1509952910, inZone_1509951048(ntAddTime(toTime_1509950899(initDateTime_1509951214(weekday_1509952971, chckRange(yearweek_1509952944, 1, 53), isoyear_1509952927, chckRange(hour_1509953005, 0, 23), chckRange(minute_1509953006, 0, 59), chckRange(second_1509953007, 0, 60), chckRange(nanosecond_1509953008, 0, 999999999), zone_1509952907)), initDuration_1509949932(0n, 0n, 0n, BigInt(get_1509952857(p_1509952906.utcOffset)), 0n, 0n, 0n, 0n)), zone_1509952907), NTI1509949473);
    }
    
  framePtr = F.prev;

  return result_1509952910;

}

function utcTzInfo_1509951089(time_1509951090) {
  var result_1509951091 = ({time: ({seconds: 0n, nanosecond: 0}), utcOffset: 0, isDst: false});

  var F = {procname: "times.utcTzInfo", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1369;
    F.filename = "times.nim";
    result_1509951091 = nimCopy(result_1509951091, {utcOffset: 0, isDst: false, time: nimCopy(null, time_1509951090, NTI1509949472)}, NTI1509949479);
  framePtr = F.prev;

  return result_1509951091;

}

function utc_1509951094() {
  var result_1509951095 = null;

  var F = {procname: "times.utc", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    if ((utcInstance_1509951092[0] == null)) {
    F.line = 1380;
    F.filename = "times.nim";
    utcInstance_1509951092[0] = newTimezone_1509950955([69,116,99,47,85,84,67], utcTzInfo_1509951089, utcTzInfo_1509951089);
    }
    
    F.line = 1381;
    result_1509951095 = utcInstance_1509951092[0];
  framePtr = F.prev;

  return result_1509951095;

}

function toDateTime_1509952736(p_1509952737, zone_1509952738, f_1509952739, input_1509952740) {
    var Temporary1;
    var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_1509952741 = ({m_type: NTI1509949473, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

  var F = {procname: "times.toDateTime", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 2096;
    F.filename = "times.nim";
    var year_1509952768 = get_1509952754(p_1509952737.year, 0);
    F.line = 2097;
    var month_1509952785 = chckRange(get_1509952754(p_1509952737.month, 1), 1, 12);
    F.line = 2098;
    var monthday_1509952802 = get_1509952754(p_1509952737.monthday, 1);
    F.line = 2100;
    F.line = 2100;
    switch (p_1509952737.era) {
    case 0:
      Temporary1 = year_1509952768;
      break;
    case 2:
      if ((year_1509952768 < 1)) {
      F.line = 2105;
      raiseParseException_1509951341(f_1509952739, input_1509952740, makeNimstrLit("Expected year to be positive (use \'UUUU\' or \'uuuu\' for negative years)."));
      }
      
      Temporary1 = HEX2B_1509949462(negInt(year_1509952768), 1);
      break;
    case 1:
      if ((year_1509952768 < 1)) {
      F.line = 2111;
      raiseParseException_1509951341(f_1509952739, input_1509952740, makeNimstrLit("Expected year to be positive (use \'UUUU\' or \'uuuu\' for negative years)."));
      }
      
      Temporary1 = year_1509952768;
      break;
    }
    year_1509952768 = Temporary1;
    F.line = 2116;
    F.line = 2117;
    switch (p_1509952737.amPm) {
    case 0:
      Temporary2 = p_1509952737.hour;
      break;
    case 1:
      if (!(contains_1006637691(HEX2EHEX2E_788529202(1, 12), p_1509952737.hour))) {
      F.line = 2122;
      raiseParseException_1509951341(f_1509952739, input_1509952740, [65,77,47,80,77,32,116,105,109,101,32,109,117,115,116,32,98,101,32,105,110,32,116,104,101,32,105,110,116,101,114,118,97,108,32,49,46,46,49,50]);
      }
      
      if ((p_1509952737.hour == 12)) {
      Temporary3 = 0;
      }
      else {
      Temporary3 = p_1509952737.hour;
      }
      
      Temporary2 = Temporary3;
      break;
    case 2:
      if (!(contains_1006637691(HEX2EHEX2E_788529202(1, 12), p_1509952737.hour))) {
      F.line = 2127;
      raiseParseException_1509951341(f_1509952739, input_1509952740, [65,77,47,80,77,32,116,105,109,101,32,109,117,115,116,32,98,101,32,105,110,32,116,104,101,32,105,110,116,101,114,118,97,108,32,49,46,46,49,50]);
      }
      
      if ((p_1509952737.hour == 12)) {
      Temporary4 = p_1509952737.hour;
      }
      else {
      Temporary4 = HEX2B_1509949462(p_1509952737.hour, 12);
      }
      
      Temporary2 = Temporary4;
      break;
    }
    var hour_1509952829 = Temporary2;
    F.line = 2130;
    var minute_1509952830 = p_1509952737.minute;
    F.line = 2131;
    var second_1509952831 = p_1509952737.second;
    F.line = 2132;
    var nanosecond_1509952832 = p_1509952737.nanosecond;
    if ((getDaysInMonth_1509949613(month_1509952785, year_1509952768) < monthday_1509952802)) {
    F.line = 2135;
    raiseParseException_1509951341(f_1509952739, input_1509952740, (HEX24_369098760(year_1509952768) || []).concat([45] || [],nsuIntToStr(month_1509952785, 2) || [],[45] || [],HEX24_369098760(monthday_1509952802) || [],[32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,100,97,116,101] || []));
    }
    
    if (isNone_1509952840(p_1509952737.utcOffset)) {
    F.line = 2141;
    result_1509952741 = nimCopy(result_1509952741, dateTime_1509951134(year_1509952768, month_1509952785, chckRange(monthday_1509952802, 1, 31), chckRange(hour_1509952829, 0, 23), chckRange(minute_1509952830, 0, 59), chckRange(second_1509952831, 0, 60), chckRange(nanosecond_1509952832, 0, 999999999), zone_1509952738), NTI1509949473);
    }
    else {
      F.line = 2145;
      result_1509952741 = nimCopy(result_1509952741, inZone_1509951048(ntAddTime(toTime_1509950899(dateTime_1509951134(year_1509952768, month_1509952785, chckRange(monthday_1509952802, 1, 31), chckRange(hour_1509952829, 0, 23), chckRange(minute_1509952830, 0, 59), chckRange(second_1509952831, 0, 60), chckRange(nanosecond_1509952832, 0, 999999999), utc_1509951094())), initDuration_1509949932(0n, 0n, 0n, BigInt(get_1509952857(p_1509952737.utcOffset)), 0n, 0n, 0n, 0n)), zone_1509952738), NTI1509949473);
    }
    
  framePtr = F.prev;

  return result_1509952741;

}

function parse_1509953139(input_1509953140, f_1509953141, zone_1509953142, loc_1509953143) {
  var result_1509953144 = ({m_type: NTI1509949473, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

  var F = {procname: "times.parse", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 2255;
    F.filename = "times.nim";
    var inpIdx_1509953145 = [0];
    F.line = 2256;
    var patIdx_1509953146 = 0;
    F.line = 2257;
    var parsed_1509953147 = [({amPm: 0, era: 0, year: ({val: 0, has: false}), month: ({val: 0, has: false}), monthday: ({val: 0, has: false}), isoyear: ({val: 0, has: false}), yearweek: ({val: 0, has: false}), weekday: ({val: 0, has: false}), utcOffset: ({val: 0, has: false}), hour: 0, minute: 0, second: 0, nanosecond: 0})];
    Label1: {
      F.line = 2258;
        Label2: while (true) {
        if (!((inpIdx_1509953145[0] <= (input_1509953140).length - 1) && (patIdx_1509953146 <= (f_1509953141.patterns).length - 1))) break Label2;
          F.line = 2259;
          var pattern_1509953151 = chckRange(f_1509953141.patterns[chckIndx(patIdx_1509953146, 0, (f_1509953141.patterns).length - 1)], 0, 37);
          F.line = 2260;
          switch (pattern_1509953151) {
          case 37:
            F.line = 2262;
            patIdx_1509953146 = addInt(patIdx_1509953146, 1);
            F.line = 2263;
            var len_1509953157 = f_1509953141.patterns[chckIndx(patIdx_1509953146, 0, (f_1509953141.patterns).length - 1)];
            F.line = 2264;
            patIdx_1509953146 = addInt(patIdx_1509953146, 1);
            Label3: {
              F.line = 2265;
              var __1509953167 = 0;
              F.line = 90;
              F.filename = "iterators_1.nim";
              var res_520093980 = 1;
              Label4: {
                F.line = 91;
                  Label5: while (true) {
                  if (!(res_520093980 <= ((len_1509953157) | 0))) break Label5;
                    F.line = 2265;
                    F.filename = "times.nim";
                    __1509953167 = res_520093980;
                    if (!((input_1509953140[chckIndx(inpIdx_1509953145[0], 0, (input_1509953140).length - 1)] == f_1509953141.patterns[chckIndx(patIdx_1509953146, 0, (f_1509953141.patterns).length - 1)]))) {
                    F.line = 2267;
                    raiseParseException_1509951341(f_1509953141, input_1509953140, ([85,110,101,120,112,101,99,116,101,100,32,99,104,97,114,97,99,116,101,114,58,32] || []).concat([input_1509953140[chckIndx(inpIdx_1509953145[0], 0, (input_1509953140).length - 1)]]));
                    }
                    
                    F.line = 2265;
                    inpIdx_1509953145[0] = addInt(inpIdx_1509953145[0], 1);
                    F.line = 2265;
                    patIdx_1509953146 = addInt(patIdx_1509953146, 1);
                    F.line = 93;
                    F.filename = "iterators_1.nim";
                    res_520093980 = addInt(res_520093980, 1);
                  }
              };
            };
            break;
          default: 
            if (!(parsePattern_1509951717(input_1509953140, pattern_1509953151, inpIdx_1509953145, 0, parsed_1509953147[0], loc_1509953143))) {
            F.line = 2273;
            F.filename = "times.nim";
            raiseParseException_1509951341(f_1509953141, input_1509953140, ([70,97,105,108,101,100,32,111,110,32,112,97,116,116,101,114,110,32,39] || []).concat(reprEnum(pattern_1509953151, NTI1509950457) || [],[39] || []));
            }
            
            F.line = 2274;
            patIdx_1509953146 = addInt(patIdx_1509953146, 1);
            break;
          }
        }
    };
    if ((inpIdx_1509953145[0] <= (input_1509953140).length - 1)) {
    F.line = 2277;
    raiseParseException_1509951341(f_1509953141, input_1509953140, [80,97,114,115,105,110,103,32,101,110,100,101,100,32,98,117,116,32,116,104,101,114,101,32,119,97,115,32,115,116,105,108,108,32,105,110,112,117,116,32,114,101,109,97,105,110,105,110,103]);
    }
    
    if ((patIdx_1509953146 <= (f_1509953141.patterns).length - 1)) {
    F.line = 2281;
    raiseParseException_1509951341(f_1509953141, input_1509953140, [80,97,114,115,105,110,103,32,101,110,100,101,100,32,98,117,116,32,116,104,101,114,101,32,119,97,115,32,115,116,105,108,108,32,112,97,116,116,101,114,110,115,32,114,101,109,97,105,110,105,110,103]);
    }
    
    if (isSome_1509952763(parsed_1509953147[0].yearweek)) {
    F.line = 2285;
    result_1509953144 = nimCopy(result_1509953144, toDateTimeByWeek_1509952905(parsed_1509953147[0], zone_1509953142, f_1509953141, input_1509953140), NTI1509949473);
    }
    else {
    if (isSome_1509952763(parsed_1509953147[0].isoyear)) {
    F.line = 2287;
    raiseParseException_1509951341(f_1509953141, input_1509953140, [73,115,111,32,121,101,97,114,32,71,71,32,111,114,32,71,71,71,71,32,114,101,113,117,105,114,101,32,105,115,111,32,119,101,101,107,32,86,32,111,114,32,86,86]);
    }
    else {
      F.line = 2289;
      result_1509953144 = nimCopy(result_1509953144, toDateTime_1509952736(parsed_1509953147[0], zone_1509953142, f_1509953141, input_1509953140), NTI1509949473);
    }
    }
  framePtr = F.prev;

  return result_1509953144;

}

function parse_520093720(input_520093722, zone_520093724, loc_520093725) {
  var result_520093726 = ({m_type: NTI1509949473, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

  var F = {procname: "parse.parse", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 2308;
    F.filename = "times.nim";
    result_520093726 = nimCopy(result_520093726, parse_1509953139(input_520093722, f2_520093727, zone_520093724, loc_520093725), NTI1509949473);
  framePtr = F.prev;

  return result_520093726;

}

function ntLtTime(a_1509950698, b_1509950699) {
  var result_1509950700 = false;

  var F = {procname: "times.<", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 1020;
    F.filename = "times.nim";
    result_1509950700 = ((a_1509950698.seconds < b_1509950699.seconds) || ((a_1509950698.seconds == b_1509950699.seconds) && (a_1509950698.nanosecond < b_1509950699.nanosecond)));
  framePtr = F.prev;

  return result_1509950700;

}

function HEX3C_1509951176(a_1509951177, b_1509951178) {
  var result_1509951179 = false;

  var F = {procname: "times.<", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/times.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1482;
    F.filename = "times.nim";
    result_1509951179 = ntLtTime(toTime_1509950899(a_1509951177), toTime_1509950899(b_1509951178));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1509951179;

}

function in_local_storage_654312194(key_654312195) {
  var result_654312196 = false;

  var F = {procname: "nimjs.in_local_storage", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((window.localStorage.getItem(key_654312195) == null)) {
    F.line = 335;
    F.filename = "nimjs.nim";
    result_654312196 = false;
    break BeforeRet;
    }
    else {
      F.line = 337;
      result_654312196 = true;
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_654312196;

}

function none_654312205() {
  var result_654312212 = ({val: null, has: false});

  var F = {procname: "none.none", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  return result_654312212;

}

function some_654312213(val_654312215) {
  var result_654312216 = ({val: null, has: false});

  var F = {procname: "some.some", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "options.nim";
    result_654312216.has = true;
    F.line = 141;
    result_654312216.val = val_654312215;
  framePtr = F.prev;

  return result_654312216;

}

function grab_val_from_local_storage_654312197(key_654312198) {
  var result_654312204 = ({val: null, has: false});

  var F = {procname: "nimjs.grab_val_from_local_storage", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(in_local_storage_654312194(key_654312198))) {
    F.line = 341;
    F.filename = "nimjs.nim";
    result_654312204 = nimCopy(result_654312204, none_654312205(), NTI654312000);
    break BeforeRet;
    }
    else {
      F.line = 343;
      result_654312204 = nimCopy(result_654312204, some_654312213(window.localStorage.getItem(key_654312198)), NTI654312000);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_654312204;

}

function isNone_520093738(self_520093740) {
  var result_520093741 = false;

  var F = {procname: "isNone.isNone", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 176;
    F.filename = "options.nim";
    result_520093741 = !(self_520093740.has);
  framePtr = F.prev;

  return result_520093741;

}

function get_520093755(self_520093757) {
  var result_520093758 = null;

  var F = {procname: "get.get", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
  framePtr = F;
    if (isNone_520093738(self_520093757)) {
    F.line = 202;
    F.filename = "options.nim";
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI671088660, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    F.line = 203;
    result_520093758 = self_520093757["val"];
  framePtr = F.prev;

  return result_520093758;

}

function get_client_wallet_from_local_storage_520093729() {
  var result_520093732 = {Field0: false, Field1: null};

  var F = {procname: "landing_page_fe.get_client_wallet_from_local_storage", prev: framePtr, filename: "/root/wef/landing_page_fe.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 22;
    F.filename = "landing_page_fe.nim";
    var addy_520093733 = grab_val_from_local_storage_654312197("user_wallet_address");
    if (isNone_520093738(addy_520093733)) {
    F.line = 24;
    var colontmp__520094032 = false;
    F.line = 24;
    var colontmp__520094033 = "";
    F.line = 24;
    result_520093732 = nimCopy(result_520093732, {Field0: colontmp__520094032, Field1: colontmp__520094033}, NTI520093703);
    break BeforeRet;
    }
    
    F.line = 25;
    var colontmp__520094034 = true;
    F.line = 25;
    var colontmp__520094035 = get_520093755(addy_520093733);
    F.line = 25;
    result_520093732 = nimCopy(result_520093732, {Field0: colontmp__520094034, Field1: colontmp__520094035}, NTI520093703);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093732;

}

function gebi_strict_654311629(id_654311630) {
  var result_654311631 = null;

  var F = {procname: "nimjs.gebi_strict", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 78;
    F.filename = "nimjs.nim";
    var el_654311632 = document.getElementById(id_654311630);
    if ((el_654311632 == null)) {
    F.line = 80;
    raiseException({message: ([69,108,101,109,101,110,116,32,119,105,116,104,32,105,100,32,39] || []).concat(cstrToNimstr(id_654311630) || [],[39,32,110,111,116,32,102,111,117,110,100] || []), parent: null, m_type: NTI654311427, name: null, trace: [], up: null}, "ElementNotFound");
    }
    else {
      F.line = 82;
      result_654311631 = el_654311632;
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_654311631;

}

function el_strict_520093822(x_520093824) {
  var result_520093825 = null;

  var F = {procname: "el_strict.el_strict", prev: framePtr, filename: "/root/wef/handles.nim", line: 0};
  framePtr = F;
    F.line = 27;
    F.filename = "handles.nim";
    result_520093825 = gebi_strict_654311629(toJSStr(reprEnum(x_520093824, NTI1543503875)));
  framePtr = F.prev;

  return result_520093825;

}

function toggleHidden_654311943(el_654311944) {
  var F = {procname: "nimjs.toggleHidden", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
  framePtr = F;
    F.line = 229;
    F.filename = "nimjs.nim";
    el_654311944.classList.toggle("hidden");
  framePtr = F.prev;

  
}
async function get_654312098(url_654312099) {
  var result_654312101 = null;

  var F = {procname: "nimjs.get", prev: framePtr, filename: "/root/.nimble/pkgs/mynimlib-1.0.0/mynimlib/nimjs.nim", line: 0};
  framePtr = F;
    F.line = 291;
    F.filename = "nimjs.nim";
    result_654312101 = fetch(url_654312099);
  framePtr = F.prev;

  return result_654312101;

}
async function is_whitelisted_520093834(addy_520093836) {
  var result_520093837 = null;

  var F = {procname: "is_whitelisted.is_whitelisted", prev: framePtr, filename: "/root/wef/landing_page_fe.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 28;
    F.filename = "landing_page_fe.nim";
    Label1: {
      F.line = 28;
      var fmtRes_520093855 = [mnewString(0)];
      F.line = 28;
      fmtRes_520093855[0].push.apply(fmtRes_520093855[0], [47,119,104,105,116,101,108,105,115,116,47]);;
      F.line = 649;
      F.filename = "strformat.nim";
      add_33556373(fmtRes_520093855, 0, addy_520093836);
    };
    var req_520093865 = (await get_654312098(toJSStr(fmtRes_520093855[0])));
    if ((req_520093865.status == 200)) {
    F.line = 30;
    F.filename = "landing_page_fe.nim";
    result_520093837 = true;
    break BeforeRet;
    }
    
    F.line = 31;
    result_520093837 = false;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093837;

}
async function HEX3Aanonymous_520093806(e_520093807) {
  var result_520093809 = null;

  var F = {procname: "landing_page_fe.:anonymous", prev: framePtr, filename: "/root/wef/landing_page_fe.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (HEX3C_1509951176(now_1509951132(), presale_end_date_520093728)) {
    F.line = 31;
    F.filename = "icecream.nim";
    console.trace("Presale is happening");
    F.line = 38;
    F.filename = "landing_page_fe.nim";
    var client_wallet_520093817 = get_client_wallet_from_local_storage_520093729();
    if (!(client_wallet_520093817.Field0)) {
    F.line = 31;
    F.filename = "icecream.nim";
    console.trace("Client wallet is not connected");
    F.line = 31;
    console.trace("Show countdown");
    F.line = 42;
    F.filename = "landing_page_fe.nim";
    el_strict_520093822(9).remove();
    F.line = 43;
    toggleHidden_654311943(el_strict_520093822(8));
    }
    else {
      F.line = 31;
      F.filename = "icecream.nim";
      console.trace("Client wallet is connected");
      if (!((await is_whitelisted_520093834(client_wallet_520093817.Field1)))) {
      F.line = 31;
      console.trace("Client wallet is not whitelisted");
      F.line = 31;
      console.trace("Show countdown");
      F.line = 50;
      F.filename = "landing_page_fe.nim";
      el_strict_520093822(9).remove();
      F.line = 51;
      toggleHidden_654311943(el_strict_520093822(8));
      }
      else {
        F.line = 31;
        F.filename = "icecream.nim";
        console.trace("Client wallet is whitelisted");
        F.line = 31;
        console.trace("Show nft accordion");
        F.line = 55;
        F.filename = "landing_page_fe.nim";
        el_strict_520093822(9).remove();
        F.line = 56;
        toggleHidden_654311943(el_strict_520093822(7));
      }
      
    }
    
    }
    else {
      F.line = 31;
      F.filename = "icecream.nim";
      console.trace("Presale has ended");
      F.line = 31;
      console.trace("Show nft accordion");
      F.line = 60;
      F.filename = "landing_page_fe.nim";
      el_strict_520093822(9).remove();
      F.line = 61;
      toggleHidden_654311943(el_strict_520093822(7));
    }
    
    F.line = 64;
                        // Get the target date (January 1st, 2024)
                    var targetDate = new Date("2024-01-01T00:00:00Z");

                    // Function to update the digital clock countdown
                    function updateCountdown() {
                        // Get the current date and time
                        var currentDate = new Date();

                        // Calculate the time remaining
                        var timeRemaining = targetDate - currentDate;

                        if (timeRemaining <= 0) {
                            document.getElementById("countdown").innerHTML = "00:00:00:00";
                            clearInterval(countdownInterval);
                        } else {
                            // Convert time remaining to days, hours, minutes, and seconds
                            var days = Math.floor(timeRemaining / 86400000); // 1 day = 24 * 60 * 60 * 1000
                            var hours = Math.floor((timeRemaining % 86400000) / 3600000); // 1 hour = 60 * 60 * 1000
                            var minutes = Math.floor((timeRemaining % 3600000) / 60000); // 1 minute = 60 * 1000
                            var seconds = Math.floor((timeRemaining % 60000) / 1000); // 1 second = 1000 milliseconds

                            // Format the time as "00:00:00:00 days:hours:minutes:seconds"
                            var formattedTime =
                                padNumber(days) + ":" +
                                padNumber(hours) + ":" +
                                padNumber(minutes) + " :" +
                                padNumber(seconds) ;

                            // Display the digital clock countdown
                            document.getElementById("countdown").innerHTML = formattedTime;
                        }
                    }

                    // Function to pad a number with leading zeros
                    function padNumber(number) {
                        return number.toString().padStart(2, '0');
                    }

                    // Update the digital clock countdown immediately and every second
                    updateCountdown();
                    var countdownInterval = setInterval(updateCountdown, 1000);
        
    F.line = 148;
    F.filename = "asyncjs.nim";
    result_520093809 = undefined;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093809;

}
var F = {procname: "module landing_page_fe", prev: framePtr, filename: "/root/wef/landing_page_fe.nim", line: 0};
framePtr = F;
F.line = 17;
F.filename = "landing_page_fe.nim";
var presale_end_date_520093728 = parse_520093720([50,48,50,52,45,49,48,45,50,57], local_1509951115(), DefaultLocale_1509951336);
F.line = 33;
document.addEventListener("DOMContentLoaded", HEX3Aanonymous_520093806)
;
framePtr = F.prev;
var F = {procname: "module landing_page_fe", prev: framePtr, filename: "/root/wef/landing_page_fe.nim", line: 0};
framePtr = F;
framePtr = F.prev;
